{"version":3,"sources":["../../src/server/app.js"],"names":["app","srcDiname","__dirname","packageDirname","config","start","proxy","DATA_PATH","servePublic","catchErrors","use","Promise","all","listen"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;;;;;AAEA,MAAMA,MAAM,kBAAQ;AAClBC,aAAY,IAAEC,SAAU,MADN;AAElBC,kBAAiB,IAAED,SAAU,SAFX;AAGlBE;AAHkB,CAAR,CAAZ;;AAMAJ,IAAIK,KAAJ,mBAAU,aAAY;AACpB;AACAL,MAAIM,KAAJ,GAAY,IAAZ;AACAN,MAAIO,SAAJ,GAAiB,IAAEL,SAAU,eAA7B;AACA,+CAAiBF,GAAjB;;AAEA;AACAA,MAAIQ,WAAJ;AACAR,MAAIS,WAAJ;AACAT,MAAIU,GAAJ,CAAQ,yEAAmCV,GAAnC,CAAR;;AAEA,QAAMW,QAAQC,GAAR,CAAY,CAChBZ,IAAIa,MAAJ,EADgB,EAEhB,qBAAUb,GAAV,CAFgB,CAAZ,CAAN;AAID,CAfD","file":"app.js","sourcesContent":["import Alp from 'alp';\nimport reactredux from 'alp-react-redux';\nimport router from 'alp-limosa';\nimport routerBuilder from '../routerBuilder';\nimport Html from '../modules/common/layouts/Html';\nimport controllers from '../modules/controllers.server';\nimport { init as websocket } from '../websocket';\nimport config from '../config.server';\n\nconst app = new Alp({\n  srcDiname: `${__dirname}/..`,\n  packageDirname: `${__dirname}/../..`,\n  config,\n});\n\napp.start(async () => {\n  // config / init\n  app.proxy = true;\n  app.DATA_PATH = `${__dirname}/../../data/`;\n  reactredux(Html)(app);\n\n  // middlewares\n  app.servePublic();\n  app.catchErrors();\n  app.use(router(routerBuilder, controllers)(app));\n\n  await Promise.all([\n    app.listen(),\n    websocket(app),\n  ]);\n});\n\n"]}