{"version":3,"sources":["../../../src/modules/raspberries/raspberriesData.server.js"],"names":["getById","changeConfig","addNew","replaceMacAddresses","addMacAddress","saveScreenshot","screenshotPath","dataPath","__dirname","dataFilename","items","JSON","parse","map","Map","item","id","size","length","Error","save","stringify","get","config","has","Object","assign","time","Date","now","display","url","trim","mac","name","newRaspberryItem","macAddresses","push","set","newMacAddresses","newMacAddress","screenshot","Buffer"],"mappings":"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","file":"raspberriesData.server.js","sourcesContent":["import { readFileSync, writeFileSync } from 'fs';\nimport type { RaspberryData, RaspberryConfig } from './types';\n/* import { slugify as _slugify } from 'transliteration';\n\nfunction slugify(string) {\n    return _slugify(string, { lowercase: true, separator: '-' });\n} */\n\nconst dataPath = `${__dirname}/../../../data`;\nconst dataFilename = `${dataPath}/raspberries.json`;\n\nexport const items: Array<RaspberryData> = JSON.parse(readFileSync(dataFilename));\nconst map = new Map(items.map(item => [item.id, item]));\n\nif (map.size !== items.length) {\n    throw new Error('Duplicated id');\n}\n\nfunction save() {\n    writeFileSync(dataFilename, JSON.stringify(items, null, 4));\n}\n\nexport function getById(id: string) {\n    return map.get(id);\n}\n\nexport function changeConfig(id, config: RaspberryConfig) {\n    if (!map.has(id)) {\n        throw new Error('Invalid id');\n    }\n\n    // TODO configManager\n    config = Object.assign({}, {\n        time: Date.now(),\n        display: config.display || 'kweb3',\n        url: config.url.trim(),\n    });\n    map.get(id).config = config;\n    save();\n\n    return config;\n}\n// ip should not be written\nexport function addNew(id: string, mac: string, name: string) {\n    const newRaspberryItem = {\n        id,\n        name,\n        macAddresses: [mac],\n        config: {},\n    };\n\n    if (map.has(newRaspberryItem.id)) {\n        throw new Error(`Already has id: ${newRaspberryItem.id}`);\n    }\n\n    items.push(newRaspberryItem);\n    map.set(newRaspberryItem.id, newRaspberryItem);\n    save();\n\n    return newRaspberryItem;\n}\n\nexport function replaceMacAddresses(id: string, newMacAddresses: Array<string>) {\n    if (!map.has(id)) {\n        throw new Error('Invalid id');\n    }\n\n    map.get(id).macAddresses = newMacAddresses;\n    save();\n}\n\nexport function addMacAddress(id: string, newMacAddress: string) {\n    if (!map.has(id)) {\n        throw new Error('Invalid id');\n    }\n\n    map.get(id).macAddresses.push(newMacAddress);\n    save();\n}\n\nexport function saveScreenshot(id: string, screenshot: Buffer) {\n    writeFileSync(screenshotPath(id), screenshot);\n}\n\nexport function screenshotPath(id: string): string {\n    return `${dataPath}/screenshot-${id}.png`;\n}\n"]}