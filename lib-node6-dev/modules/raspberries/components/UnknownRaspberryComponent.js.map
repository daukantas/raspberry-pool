{"version":3,"sources":["../../../../src/modules/raspberries/components/UnknownRaspberryComponent.jsx"],"names":["UnknownRaspberryComponent","state","render","props","raspberry","registerUnknown","offlineRaspberries","saving","hostname","ip","online","name","undefined","e","setState","target","value","id","addOrReplace","length","user","filter","r","data","owner","map","propTypes","object","isRequired","array","func","sendAction"],"mappings":"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","file":"UnknownRaspberryComponent.jsx","sourcesContent":["import { PureComponent, PropTypes } from 'react';\nimport T from 'react-alp-translate/src';\nimport User from 'react-alp-user/src';\nimport Spinner from '../../common/components/SpinnerComponent';\n\nexport default class UnknownRaspberryComponent extends PureComponent {\n  static propTypes = {\n    raspberry: PropTypes.object.isRequired,\n    offlineRaspberries: PropTypes.array.isRequired,\n    registerUnknown: PropTypes.func.isRequired,\n    sendAction: PropTypes.func.isRequired,\n  };\n\n  state = {};\n\n  render() {\n    const { raspberry, registerUnknown, offlineRaspberries } = this.props;\n\n    return (\n      <div className=\"raspberry unknown\">\n        <Spinner active={raspberry.saving} />\n        <div>\n          <h2 className=\"text-title\">{raspberry.hostname || raspberry.ip}</h2>\n          <span className=\"status label\">{raspberry.ip}</span>\n          <span>&nbsp;</span>\n          <span className=\"status label\">{raspberry.online}</span>\n        </div>\n\n        <div className=\"row row-responsive spaced\">\n          <div className=\"col wp-50\">\n            <div className=\"text-paragraph-title\"><T id=\"unknownRaspberry.title\" /></div>\n            <div className=\"input text\">\n              <input\n                type=\"text\"\n                required\n                autoComplete=\"off\"\n                className={`${this.state.name === undefined ? '' : `has-value${this.state.name ? '' : ' has-empty-value'}`}`}\n                value={this.state.name}\n                onChange={(e) => this.setState({ name: e.target.value })}\n              />\n              <label htmlFor={`raspberry-url-${raspberry.id}`}>Name</label>\n            </div>\n          </div>\n          <div className=\"col wp-50\">\n            <div className=\"input radio\">\n              <input\n                id={`add-raspberry-${raspberry.id}`}\n                name=\"addOrReplace\"\n                type=\"radio\"\n                value=\"\"\n                checked={!this.state.addOrReplace}\n                onChange={(e) => this.setState({ addOrReplace: e.target.value, id: null })}\n              />\n              <label htmlFor={`add-raspberry-${raspberry.id}`}><T id=\"unknownRaspberry.add\" /></label>\n            </div>\n            {!offlineRaspberries.length ? '' : [\n              <div key=\"addToExisting\" className=\"input radio\">\n                <input\n                  id={`add-to-existing-raspberry-${raspberry.id}`}\n                  name=\"addOrReplace\"\n                  type=\"radio\"\n                  value=\"addToExisting\"\n                  checked={this.state.addOrReplace === 'addToExisting'}\n                  onChange={(e) => this.setState({ addOrReplace: e.target.value, id: null })}\n                />\n                <label htmlFor={`add-to-existing-raspberry-${raspberry.id}`}><T id=\"unknownRaspberry.addToExisting\" /></label>\n              </div>,\n              <div key=\"replace\" className=\"input radio\">\n                <input\n                  id={`replace-raspberry-${raspberry.id}`}\n                  name=\"addOrReplace\"\n                  type=\"radio\"\n                  value=\"replace\"\n                  checked={this.state.addOrReplace === 'replace'}\n                  onChange={(e) => this.setState({ addOrReplace: e.target.value })}\n                />\n                <label htmlFor={`replace-raspberry-${raspberry.id}`}><T id=\"unknownRaspberry.replace\" /></label>\n              </div>,\n            ]}\n            <User>{user => (\n              <select\n                disabled={!this.state.addOrReplace}\n                name=\"raspberry\"\n                onChange={(e) => this.setState({ addOrReplace: this.state.addOrReplace || 'replace', id: e.target.value })}\n              >\n                {!this.state.id && <option key=\"__empty\" />}\n                {offlineRaspberries.filter(r => r.data.owner === user.id).map(r => (\n                  <option key={r.id} value={r.id}>{r.data.name}</option>\n                ))}\n              </select>\n            )}</User>\n          </div>\n        </div>\n\n        <div className=\"button-container align-center\">\n          <button\n            type=\"button\"\n            disabled={!!raspberry.saving || (\n              (!this.state.addOrReplace && !this.state.name)\n              || (this.state.addOrReplace && !this.state.id)\n            )}\n            onClick={() => {\n              registerUnknown(raspberry, {\n                name: this.state.name,\n                addOrReplace: this.state.addOrReplace,\n                id: this.state.id,\n              });\n            }}\n          >\n            <T id=\"unknownRaspberry.add\" />\n          </button>\n        </div>\n      </div>\n    );\n        /*\n                <button type=\"button\" onClick={() => {\n                    sendAction(raspberry, 'blink');\n                    this.setState({ urlChanged: false });\n                }}>Blink</button>\n        */\n  }\n}\n"]}