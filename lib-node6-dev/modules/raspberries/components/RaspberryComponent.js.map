{"version":3,"sources":["../../../../src/modules/raspberries/components/RaspberryComponent.jsx"],"names":["RaspberryComponent","constructor","props","shouldComponentUpdate","state","render","raspberry","changeConfig","sendAction","url","display","saving","lastUrl","data","config","lastDisplay","id","Date","now","online","screenState","name","ip","width","e","setState","target","value","propTypes","object","isRequired","func"],"mappings":"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","file":"RaspberryComponent.jsx","sourcesContent":["import { Component, PropTypes } from 'react';\nimport shouldPureComponentUpdate from 'react-pure-render/function';\nimport Spinner from '../../common/components/SpinnerComponent';\nimport Actions from './raspberry/ActionsComponent';\nimport T from 'react-alp-translate';\n\nexport default class RaspberryComponent extends Component {\n    static propTypes = {\n        raspberry: PropTypes.object.isRequired,\n        changeConfig: PropTypes.func.isRequired,\n        sendAction: PropTypes.func.isRequired,\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    shouldComponentUpdate = shouldPureComponentUpdate;\n\n    render() {\n        const { raspberry, changeConfig, sendAction } = this.props;\n\n        let url;\n        let display;\n        if (this.state.url != null) {\n            url = this.state.url;\n        } else if (raspberry.saving) {\n            url = this.state.lastUrl;\n        } else {\n            url = raspberry.data.config.url;\n        }\n\n        if (this.state.display != null) {\n            display = this.state.display;\n        } else if (raspberry.saving) {\n            display = this.state.lastDisplay;\n        } else {\n            display = raspberry.data.config.display;\n        }\n\n        return (<div className=\"raspberry\">\n            <div className=\"img-container\">\n                <img alt=\"screenshot\" src={`/screenshot.jpg?id=${raspberry.id}&date=${Date.now()}`} />\n            </div>\n            <div className=\"header-container\">\n                <h2 className=\"text-title\">\n                    <span className={`screen-status ${raspberry.online ? raspberry.screenState : 'offline'}`} title={raspberry.screenState === 'on' ? 'On' : 'Off'}>\n                        <span className=\"icon\" />\n                        <span className=\"status\" />\n                    </span>\n                    {raspberry.data.name}\n                </h2>\n            </div>\n            <Spinner active={raspberry.saving} />\n\n            <div className=\"status-container\">\n                <span className={`raspberry-status label ${raspberry.online ? 'success' : 'warning'}`}>\n                    {raspberry.online ? `${raspberry.ip}` : <T id=\"raspberry.offline\" />}\n                </span>\n            </div>\n\n            <Actions raspberries={[raspberry]} sendAction={sendAction} />\n\n            <fieldset>\n                <legend><T id=\"raspberry.config\" /></legend>\n                <div className=\"row row-responsive spaced\">\n                    <div className=\"col\" style={{ width: '100px', 'flex-basis': '100px', 'flex-grow': 0 }}>\n                        <div className=\"input select\">\n                            <select\n                                value={display || 'kweb3'}\n                                id={`raspberry-select-${raspberry.id}`}\n                                className={'has-value'}\n                                onChange={(e) => this.setState({\n                                    display: raspberry.data.config.display === e.target.value ? null : e.target.value,\n                                })}\n                            >\n                                <option value=\"kweb3\">kweb3</option>\n                                <option value=\"chromium\">chromium</option>\n                                <option value=\"livestreamer\">livestreamer</option>\n                            </select>\n                            <label htmlFor={`raspberry-select-${raspberry.id}`}><T id=\"raspberry.display\" /></label>\n                        </div>\n                    </div>\n                    <div className=\"col\">\n                        <div className=\"input text\">\n                            <input\n                                id={`raspberry-url-${raspberry.id}`}\n                                type=\"url\" required\n                                className={`has-value${url ? '' : ' has-empty-value'}`}\n                                value={url}\n                                autoComplete=\"off\"\n                                onChange={(e) => this.setState({\n                                    url: raspberry.data.config.url === e.target.value ? null : e.target.value,\n                                })}\n                            />\n                            <label htmlFor={`raspberry-url-${raspberry.id}`}><T id=\"raspberry.url\" /></label>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"button-container center\">\n                    <button\n                        type=\"button\"\n                        disabled={raspberry.saving || (this.state.url == null && this.state.display == null)}\n                        onClick={() => {\n                            const display = this.state.display || raspberry.data.config.display;\n                            const url = this.state.url || raspberry.data.config.url;\n                            this.setState({ url: null, lastUrl: url, display: null, lastDisplay: display });\n                            changeConfig(raspberry, { display, url });\n                        }}\n                    >\n                        <T id=\"raspberry.save\" />\n                    </button>\n                </div>\n            </fieldset>\n        </div>);\n    }\n}\n"]}