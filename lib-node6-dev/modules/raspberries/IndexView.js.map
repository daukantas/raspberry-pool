{"version":3,"sources":["../../../src/modules/raspberries/IndexView.jsx"],"names":["raspberriesActions","IndexView","context","unknownRaspberries","registeredRaspberries","sendAction","changeConfig","registerUnknown","title","t","setTitle","user","filter","r","online","propTypes","array","isRequired","func","contextTypes","object","raspberries","registered"],"mappings":";;;;;;;;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;AACA;;IAAYA,kB;;;;;;AAGZ,MAAMC,YAAY,OAQhBC,OARgB,KASb;AAAA,MAPDC,kBAOC,QAPDA,kBAOC;AAAA,MANDC,qBAMC,QANDA,qBAMC;AAAA,MALDC,UAKC,QALDA,UAKC;AAAA,MAJDC,YAIC,QAJDA,YAIC;AAAA,MAHDC,eAGC,QAHDA,eAGC;;AACH,QAAMC,QAAQN,QAAQA,OAAR,CAAgBO,CAAhB,CAAkB,sBAAlB,CAAd;AACAP,UAAQQ,QAAR,CAAiBF,KAAjB;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACE;AACE,mBAAaJ,qBADf;AAEE,kBAAYC,UAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAOM,cACL,CAACA,IAAD,GACE;AAAA;AAAA,UAAK,KAAI,oBAAT,EAA8B,WAAU,oBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,+CAAK,WAAU,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAEE;AAAA;AAAA,YAAM,WAAU,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AACE;AAAA;AAAA,cAAI,WAAU,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2B,yEAAG,IAAG,yBAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAA3B,WADF;AAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAFF,OADF,GASE;AAAA;AAAA,UAAoB,MAAK,aAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACE;AACE,iBAAI,SADN;AAEE,yBAAaR,kBAFf;AAGE,gCAAoBC,sBAAsBQ,MAAtB,CAA6BC,KAAK,CAACA,EAAEC,MAArC,CAHtB;AAIE,6BAAiBP,eAJnB;AAKE,wBAAYF,UALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAQE;AACE,iBAAI,OADN;AAEE,yBAAaD,qBAFf;AAGE,0BAAcE,YAHhB;AAIE,wBAAYD,UAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AARF;AADF;AAVJ;AALF,GADF;AAqCD,CAjDD;;AAmDAJ,UAAUc,SAAV,GAAsB;AACpBX,yBAAuB,iBAAUY,KAAV,CAAgBC,UADnB;AAEpBd,sBAAoB,iBAAUa,KAAV,CAAgBC,UAFhB;;AAIpB;AACAZ,cAAY,iBAAUa,IAAV,CAAeD,UALP;AAMpBX,gBAAc,iBAAUY,IAAV,CAAeD,UANT;AAOpBV,mBAAiB,iBAAUW,IAAV,CAAeD;AAPZ,CAAtB;;AAUAhB,UAAUkB,YAAV,GAAyB;AACvBT,YAAU,iBAAUQ,IAAV,CAAeD,UADF;AAEvBf,WAAS,iBAAUkB,MAAV,CAAiBH;AAFH,CAAzB;;kBAKe,4BACb;AAAA,MAAGI,WAAH,SAAGA,WAAH;AAAA,SAAsB;AACpBjB,2BAAuBiB,YAAYT,MAAZ,CAAmBC,KAAKA,EAAES,UAA1B,CADH;AAEpBnB,wBAAoBkB,YAAYT,MAAZ,CAAmBC,KAAK,CAACA,EAAES,UAA3B;AAFA,GAAtB;AAAA,CADa,EAKbtB,kBALa,EAMbC,SANa,C","file":"IndexView.jsx","sourcesContent":["import { PropTypes } from 'react';\nimport { connect } from 'alp-react-redux/src';\nimport User from 'react-alp-user/src';\nimport T from 'react-alp-translate/src';\nimport SubscribeContainer from 'react-alp-subscribe-container/src';\nimport { LoginButtons } from 'react-alp-login';\nimport Header from './components/HeaderComponent';\nimport RaspberryList from './components/RaspberryListComponent';\nimport UnknownRaspberryList from './components/UnknownRaspberryListComponent';\nimport * as raspberriesActions from './actions/raspberry';\n\n\nconst IndexView = (\n  {\n    unknownRaspberries,\n    registeredRaspberries,\n    sendAction,\n    changeConfig,\n    registerUnknown,\n  },\n  context,\n) => {\n  const title = context.context.t('raspberry-pool.title');\n  context.setTitle(title);\n  return (\n    <div>\n      <Header\n        raspberries={registeredRaspberries}\n        sendAction={sendAction}\n      />\n      <User>{user => (\n        !user ? (\n          <div key=\"home-not-connected\" className=\"home-not-connected\">\n            <div className=\"picture\" />\n            <main className=\"main-container\">\n              <h1 className=\"page-title\"><T id=\"home.notConnected.title\" /></h1>\n              <LoginButtons />\n            </main>\n          </div>\n        ) : (\n          <SubscribeContainer name=\"raspberries\">\n            <div>\n              <UnknownRaspberryList\n                key=\"unknown\"\n                raspberries={unknownRaspberries}\n                offlineRaspberries={registeredRaspberries.filter(r => !r.online)}\n                registerUnknown={registerUnknown}\n                sendAction={sendAction}\n              />\n              <RaspberryList\n                key=\"known\"\n                raspberries={registeredRaspberries}\n                changeConfig={changeConfig}\n                sendAction={sendAction}\n              />\n            </div>\n          </SubscribeContainer>\n        )\n      )}</User>\n    </div>\n  );\n};\n\nIndexView.propTypes = {\n  registeredRaspberries: PropTypes.array.isRequired,\n  unknownRaspberries: PropTypes.array.isRequired,\n\n  // actions\n  sendAction: PropTypes.func.isRequired,\n  changeConfig: PropTypes.func.isRequired,\n  registerUnknown: PropTypes.func.isRequired,\n};\n\nIndexView.contextTypes = {\n  setTitle: PropTypes.func.isRequired,\n  context: PropTypes.object.isRequired,\n};\n\nexport default connect(\n  ({ raspberries }) => ({\n    registeredRaspberries: raspberries.filter(r => r.registered),\n    unknownRaspberries: raspberries.filter(r => !r.registered),\n  }),\n  raspberriesActions,\n)(IndexView);\n"]}