{"version":3,"sources":["../../src/server/app.js"],"names":["loginModuleDescriptor","app","start","proxy","DATA_PATH","__dirname","promiseWebsocket","authMiddleware","controllers","usersManager","strategies","google","config","servePublic","catchErrors","use","Promise","all","listen"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;AACA;;IAAYA,qB;;;;;;;;AAEZ,MAAMC,MAAM,uBAAZ;;AAEAA,IAAIC,KAAJ,mBAAU,aAAY;AACpB;AACAD,MAAIE,KAAJ,GAAY,IAAZ;AACAF,MAAIG,SAAJ,GAAiB,IAAEC,SAAU,eAA7B;AACA,iDAAiBJ,GAAjB;AACA,QAAMK,mBAAmB,iBAAUL,GAAV,CAAzB;;AAEA,QAAMM,iBAAiB,uBAAS;AAC9BC,sCAD8B;AAE9BC,wCAF8B;AAG9BC,gBAAY,EAAEC,QAAQ,sBAAeV,IAAIW,MAAnB,CAAV,EAHkB;AAI9BZ;AAJ8B,GAAT,EAKpBC,GALoB,CAAvB;;AAOA;AACAA,MAAIY,WAAJ;AACAZ,MAAIa,WAAJ;AACAb,MAAIc,GAAJ,CAAQR,cAAR;AACAN,MAAIc,GAAJ,CAAQ,yEAAmCd,GAAnC,CAAR;;AAEA,QAAMe,QAAQC,GAAR,CAAY,CAChBhB,IAAIiB,MAAJ,EADgB,EAEhBZ,gBAFgB,CAAZ,CAAN;AAID,CAxBD","file":"app.js","sourcesContent":["import Alp from 'alp-node/src';\nimport authInit from 'alp-auth/src';\nimport googleStrategy from 'alp-auth/strategies/google';\nimport reactredux from 'alp-react-redux/src';\nimport router from 'alp-limosa/src';\nimport routerBuilder from '../routerBuilder';\nimport Html from '../modules/common/layouts/Layout';\nimport controllers from '../modules/controllers';\nimport { init as websocket } from '../websocket/index.server';\nimport usersManager from '../models/user/usersManager';\nimport * as loginModuleDescriptor from '../modules/login/descriptor';\n\nconst app = new Alp();\n\napp.start(async () => {\n  // config / init\n  app.proxy = true;\n  app.DATA_PATH = `${__dirname}/../../data/`;\n  reactredux(Html)(app);\n  const promiseWebsocket = websocket(app);\n\n  const authMiddleware = authInit({\n    controllers,\n    usersManager,\n    strategies: { google: googleStrategy(app.config) },\n    loginModuleDescriptor,\n  })(app);\n\n  // middlewares\n  app.servePublic();\n  app.catchErrors();\n  app.use(authMiddleware);\n  app.use(router(routerBuilder, controllers)(app));\n\n  await Promise.all([\n    app.listen(),\n    promiseWebsocket,\n  ]);\n});\n\n"]}