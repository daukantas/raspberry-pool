{"version":3,"sources":["../../src/browser/app.js"],"names":["moduleDescriptors","app","start","init","document","getElementById","catchErrors","use","window","MODULE_IDENTIFIER","initialRender","initialData","run"],"mappings":";;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;AACA;;;;AAEA;;IAAYA,iB;;;;;;2cARZ;;;AAUA,MAAMC,MAAM,mBAAZ;;AAEAA,IAAIC,KAAJ,mBAAU,aAAY;AACpB;AACA,QAAMD,IAAIE,IAAJ,EAAN;AACA,mBAAUF,GAAV;AACA,+BAAWG,SAASC,cAAT,CAAwB,KAAxB,CAAX,EAA2CJ,GAA3C;;AAEA;AACAA,MAAIK,WAAJ;AACAL,MAAIM,GAAJ,CAAQ,yEAAmCN,GAAnC,CAAR;;AAEA,MAAIO,OAAOC,iBAAX,EAA8B;AAC5B,UAAMR,IAAIS,aAAJ,CAAkBV,kBAAkBQ,OAAOC,iBAAzB,CAAlB,EAA+DD,OAAOG,WAAtE,CAAN;AACD;;AAED,QAAMV,IAAIW,GAAJ,EAAN;AACD,CAfD","file":"app.js","sourcesContent":["/* global window, document */\nimport Alp from 'alp';\nimport router from 'alp-limosa';\nimport reactredux from 'alp-react-redux';\nimport { init as websocket } from '../websocket/index.browser';\nimport controllers from '../modules/controllers';\nimport routerBuilder from '../routerBuilder';\n\nimport * as moduleDescriptors from '../modules';\n\nconst app = new Alp();\n\napp.start(async () => {\n  // init\n  await app.init();\n  websocket(app);\n  reactredux(document.getElementById('app'))(app);\n\n  // middlewares\n  app.catchErrors();\n  app.use(router(routerBuilder, controllers)(app));\n\n  if (window.MODULE_IDENTIFIER) {\n    await app.initialRender(moduleDescriptors[window.MODULE_IDENTIFIER], window.initialData);\n  }\n\n  await app.run();\n});\n"]}