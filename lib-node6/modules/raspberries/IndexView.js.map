{"version":3,"sources":["../../../src/modules/raspberries/IndexView.jsx"],"names":["raspberriesActions","IndexView","unknownRaspberries","registeredRaspberries","sendAction","changeConfig","registerUnknown","t","user","filter","r","online","raspberries","registered"],"mappings":";;;;;;;;;;AAAA;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;AACA;;IAAYA,kB;;;;;;AAYZ,MAAMC,YAAY;AAAA,MAEdC,kBAFc,QAEdA,kBAFc;AAAA,MAGdC,qBAHc,QAGdA,qBAHc;AAAA,MAIdC,UAJc,QAIdA,UAJc;AAAA,MAKdC,YALc,QAKdA,YALc;AAAA,MAMdC,eANc,QAMdA,eANc;AAAA,SAShB;AAAA;AAAA;AACE;AAAA;AAAA,QAAG,IAAG,sBAAN;AAA8BC,WAAK,uDAAQ,OAAOA,CAAf;AAAnC,KADF;AAEE;AACE,mBAAaJ,qBADf;AAEE,kBAAYC;AAFd,MAFF;AAME;AAAA;AAAA;AAAOI,cACL,CAACA,IAAD,GACE;AAAA;AAAA,UAAK,KAAI,oBAAT,EAA8B,WAAU,oBAAxC;AACE,+CAAK,WAAU,SAAf,GADF;AAEE;AAAA;AAAA,YAAM,WAAU,gBAAhB;AACE;AAAA;AAAA,cAAI,WAAU,YAAd;AAA2B,yEAAG,IAAG,yBAAN;AAA3B,WADF;AAEE;AAFF;AAFF,OADF,GASE;AAAA;AAAA,UAAoB,MAAK,aAAzB;AACE;AAAA;AAAA;AACE;AACE,iBAAI,SADN;AAEE,yBAAaN,kBAFf;AAGE,gCAAoBC,sBAAsBM,MAAtB,CAA6BC,KAAK,CAACA,EAAEC,MAArC,CAHtB;AAIE,6BAAiBL,eAJnB;AAKE,wBAAYF;AALd,YADF;AAQE;AACE,iBAAI,OADN;AAEE,yBAAaD,qBAFf;AAGE,0BAAcE,YAHhB;AAIE,wBAAYD;AAJd;AARF;AADF;AAVJ;AANF,GATgB;AAAA,CAAlB;;kBA+Ce,4BACb;AAAA,MAAGQ,WAAH,SAAGA,WAAH;AAAA,SAAsB;AACpBT,2BAAuBS,YAAYH,MAAZ,CAAmBC,KAAKA,EAAEG,UAA1B,CADH;AAEpBX,wBAAoBU,YAAYH,MAAZ,CAAmBC,KAAK,CAACA,EAAEG,UAA3B;AAFA,GAAtB;AAAA,CADa,EAKbb,kBALa,EAMbC,SANa,C","file":"IndexView.jsx","sourcesContent":["import { connect, Helmet } from 'alp-react-redux/src';\nimport User from 'react-alp-user/src';\nimport T from 'react-alp-translate/src';\nimport SubscribeContainer from 'react-alp-subscribe-container/src';\nimport { LoginButtons } from 'react-alp-login/src';\nimport Header from './components/HeaderComponent';\nimport RaspberryList from './components/RaspberryListComponent';\nimport UnknownRaspberryList from './components/UnknownRaspberryListComponent';\nimport * as raspberriesActions from './actions/raspberry';\n\ntype PropsType = {\n  registeredRaspberries: Array<any>,\n  unknownRaspberries: Array<any>,\n\n  // actions\n  sendAction: Function,\n  changeConfig: Function,\n  registerUnknown: Function,\n};\n\nconst IndexView = (\n  {\n    unknownRaspberries,\n    registeredRaspberries,\n    sendAction,\n    changeConfig,\n    registerUnknown,\n  }: PropsType,\n) => (\n  <div>\n    <T id=\"raspberry-pool.title\">{t => <Helmet title={t} />}</T>\n    <Header\n      raspberries={registeredRaspberries}\n      sendAction={sendAction}\n    />\n    <User>{user => (\n      !user ? (\n        <div key=\"home-not-connected\" className=\"home-not-connected\">\n          <div className=\"picture\" />\n          <main className=\"main-container\">\n            <h1 className=\"page-title\"><T id=\"home.notConnected.title\" /></h1>\n            <LoginButtons />\n          </main>\n        </div>\n      ) : (\n        <SubscribeContainer name=\"raspberries\">\n          <div>\n            <UnknownRaspberryList\n              key=\"unknown\"\n              raspberries={unknownRaspberries}\n              offlineRaspberries={registeredRaspberries.filter(r => !r.online)}\n              registerUnknown={registerUnknown}\n              sendAction={sendAction}\n            />\n            <RaspberryList\n              key=\"known\"\n              raspberries={registeredRaspberries}\n              changeConfig={changeConfig}\n              sendAction={sendAction}\n            />\n          </div>\n        </SubscribeContainer>\n      )\n    )}</User>\n  </div>\n);\n\nexport default connect(\n  ({ raspberries }) => ({\n    registeredRaspberries: raspberries.filter(r => r.registered),\n    unknownRaspberries: raspberries.filter(r => !r.registered),\n  }),\n  raspberriesActions,\n)(IndexView);\n"]}