{"version":3,"sources":["../../../../../src/modules/raspberries/components/raspberry/ActionsComponent.jsx"],"names":["ActionsComponent","render","props","raspberries","sendAction","flat","length","availableActions","map","action","filter","r","online","isVisible","value","raspberry","isInProgress","name","actions","propTypes","bool","array","isRequired","func"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;AAEe,MAAMA,gBAAN,8BAA6C;;AAO1DC,WAAS;AAAA,iBACmC,KAAKC,KADxC;AAAA,UACCC,WADD,UACCA,WADD;AAAA,UACcC,UADd,UACcA,UADd;AAAA,UAC0BC,IAD1B,UAC0BA,IAD1B;;;AAGP,QAAI,CAACF,WAAD,IAAgB,CAACA,YAAYG,MAAjC,EAAyC;AACvC,aAAO,uCAAK,WAAU,SAAf,GAAP;AACD;;AAED,UAAMC,mBAAmB,2BACtBC,GADsB,CAClBC,uBACAA,MADA;AAEHN,mBAAaA,YAAYO,MAAZ,CAAmBC,KAAKA,EAAEC,MAAF,IAAYH,OAAOI,SAAP,CAAiBF,CAAjB,CAApC;AAFV,MADkB,EAKtBD,MALsB,CAKfD,UAAUA,OAAON,WAAP,CAAmBG,MAAnB,GAA4B,CALvB,CAAzB;;AAOA,QAAI,CAACC,iBAAiBD,MAAtB,EAA8B;AAC5B,aAAO,uCAAK,WAAU,SAAf,GAAP;AACD;;AAED,WAAQ;AAAA;AAAA,QAAK,WAAY,2BAAyB,CAACD,IAAD,GAAQ,EAAR,GAAa,OAAQ,GAA/D;AAAA;AAEN;AAAA;AAAA,UAAI,WAAU,MAAd;AACGE,yBAAiBC,GAAjB,CAAqBC,UACpB;AAAA;AAAA;AACE,iBAAKA,OAAOK,KADd;AAEE,qBAAS,MAAM;AACb,oBAAMX,cAAcM,OAAON,WAAP,CAAmBO,MAAnB,CAA0BK,aAAa,CAACN,OAAOO,YAAP,CAAoBD,SAApB,CAAxC,CAApB;AACA,kBAAIZ,YAAYG,MAAhB,EAAwB;AACtB,uBAAOF,WAAWD,WAAX,EAAwBM,OAAOK,KAA/B,CAAP;AACD;AACF;AAPH;AASGL,iBAAOQ,IATV;AAUE;AACE,oBAAQ,CAAC,CAACd,YAAYO,MAAZ,CAAmBK,aAC3BA,UAAUG,OAAV,IAAqBH,UAAUG,OAAV,CAAkBT,OAAOK,KAAzB,MAAoC,SAAzD,IAAsEL,OAAOO,YAAP,CAAoBD,SAApB,CAD9D,EAEPT;AAHL;AAVF,SADD;AADH;AAFM,KAAR;AAuBD;AAhDyD;kBAAvCN,gB;AAAAA,gB,CACZmB,S,GAAY;AACjBd,QAAM,iBAAUe,IADC;AAEjBjB,eAAa,iBAAUkB,KAAV,CAAgBC,UAFZ;AAGjBlB,cAAY,iBAAUmB,IAAV,CAAeD;AAHV,C","file":"ActionsComponent.jsx","sourcesContent":["import React, { PureComponent, PropTypes } from 'react';\nimport actions from '../../raspberryActions';\nimport Spinner from '../../../common/components/SpinnerComponent';\n\nexport default class ActionsComponent extends PureComponent {\n  static propTypes = {\n    flat: PropTypes.bool,\n    raspberries: PropTypes.array.isRequired,\n    sendAction: PropTypes.func.isRequired,\n  };\n\n  render() {\n    const { raspberries, sendAction, flat } = this.props;\n\n    if (!raspberries || !raspberries.length) {\n      return <div className=\"actions\" />;\n    }\n\n    const availableActions = actions\n      .map(action => ({\n        ...action,\n        raspberries: raspberries.filter(r => r.online && action.isVisible(r)),\n      }))\n      .filter(action => action.raspberries.length > 0);\n\n    if (!availableActions.length) {\n      return <div className=\"actions\" />;\n    }\n\n    return (<div className={`actions dropdown button${!flat ? '' : ' flat'}`}>\n      Actions\n      <ul className=\"list\">\n        {availableActions.map(action => (\n          <li\n            key={action.value}\n            onClick={() => {\n              const raspberries = action.raspberries.filter(raspberry => !action.isInProgress(raspberry));\n              if (raspberries.length) {\n                return sendAction(raspberries, action.value);\n              }\n            }}\n          >\n            {action.name}\n            <Spinner\n              active={!!raspberries.filter(raspberry => (\n                raspberry.actions && raspberry.actions[action.value] === 'sending' || action.isInProgress(raspberry)\n              )).length}\n            />\n          </li>\n        ))}\n      </ul>\n    </div>);\n  }\n}\n"]}