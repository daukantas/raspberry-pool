{"version":3,"sources":["../../../../../src/modules/raspberries/components/raspberry/ActionsComponent.jsx"],"names":["ActionsComponent","shouldComponentUpdate","render","props","raspberries","sendAction","length","availableActions","map","action","filter","r","online","isVisible","value","raspberry","isInProgress","name","actions","propTypes","array","isRequired","func"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEe,MAAMA,gBAAN,0BAAyC;AAAA;AAAA;;AAAA,iDAMpDC,qBANoD;AAAA;;AAQpDC,aAAS;AAAA,qBAC+B,KAAKC,KADpC;AAAA,cACGC,WADH,UACGA,WADH;AAAA,cACgBC,UADhB,UACgBA,UADhB;;;AAGL,YAAI,CAACD,WAAD,IAAgB,CAACA,YAAYE,MAAjC,EAAyC;AACrC,mBAAO,uCAAK,WAAU,SAAf,GAAP;AACH;;AAED,cAAMC,mBAAmB,2BACpBC,GADoB,CAChBC,uBACEA,MADF;AAEDL,yBAAaA,YAAYM,MAAZ,CAAmBC,KAAKA,EAAEC,MAAF,IAAYH,OAAOI,SAAP,CAAiBF,CAAjB,CAApC;AAFZ,UADgB,EAKpBD,MALoB,CAKbD,UAAUA,OAAOL,WAAP,CAAmBE,MAAnB,GAA4B,CALzB,CAAzB;;AAOA,YAAI,CAACC,iBAAiBD,MAAtB,EAA8B;AAC1B,mBAAO,uCAAK,WAAU,SAAf,GAAP;AACH;;AAED,eAAQ;AAAA;AAAA,cAAK,WAAU,yBAAf;AAAA;AAEJ;AAAA;AAAA,kBAAI,WAAU,MAAd;AACKC,iCAAiBC,GAAjB,CAAqBC,UAClB;AAAA;AAAA;AACI,6BAAKA,OAAOK,KADhB;AAEI,iCAAS,MAAM;AACX,kCAAMV,cAAcK,OAAOL,WAAP,CAAmBM,MAAnB,CAA0BK,aAAa,CAACN,OAAOO,YAAP,CAAoBD,SAApB,CAAxC,CAApB;AACA,gCAAIX,YAAYE,MAAhB,EAAwB;AACpB,uCAAOD,WAAWD,WAAX,EAAwBK,OAAOK,KAA/B,CAAP;AACH;AACJ;AAPL;AASKL,2BAAOQ,IATZ;AAUI;AACI,gCAAQ,CAAC,CAACb,YAAYM,MAAZ,CAAmBK,aACzBA,UAAUG,OAAV,IAAqBH,UAAUG,OAAV,CAAkBT,OAAOK,KAAzB,MAAoC,SAAzD,IAAsEL,OAAOO,YAAP,CAAoBD,SAApB,CADhE,EAEPT;AAHP;AAVJ,iBADH;AADL;AAFI,SAAR;AAuBH;AAjDmD;kBAAnCN,gB;AAAAA,gB,CACVmB,S,GAAY;AACff,iBAAa,iBAAUgB,KAAV,CAAgBC,UADd;AAEfhB,gBAAY,iBAAUiB,IAAV,CAAeD;AAFZ,C","file":"ActionsComponent.jsx","sourcesContent":["import React, { Component, PropTypes } from 'react';\nimport shouldPureComponentUpdate from 'react-pure-render/function';\nimport actions from '../../raspberryActions';\nimport Spinner from '../../../common/components/SpinnerComponent';\n\nexport default class ActionsComponent extends Component {\n    static propTypes = {\n        raspberries: PropTypes.array.isRequired,\n        sendAction: PropTypes.func.isRequired,\n    };\n\n    shouldComponentUpdate = shouldPureComponentUpdate;\n\n    render() {\n        const { raspberries, sendAction } = this.props;\n\n        if (!raspberries || !raspberries.length) {\n            return <div className=\"actions\" />;\n        }\n\n        const availableActions = actions\n            .map(action => ({\n                ...action,\n                raspberries: raspberries.filter(r => r.online && action.isVisible(r)),\n            }))\n            .filter(action => action.raspberries.length > 0);\n\n        if (!availableActions.length) {\n            return <div className=\"actions\" />;\n        }\n\n        return (<div className=\"actions dropdown button\">\n            Actions\n            <ul className=\"list\">\n                {availableActions.map(action => (\n                    <li\n                        key={action.value}\n                        onClick={() => {\n                            const raspberries = action.raspberries.filter(raspberry => !action.isInProgress(raspberry));\n                            if (raspberries.length) {\n                                return sendAction(raspberries, action.value);\n                            }\n                        }}\n                    >\n                        {action.name}\n                        <Spinner\n                            active={!!raspberries.filter(raspberry => (\n                                raspberry.actions && raspberry.actions[action.value] === 'sending' || action.isInProgress(raspberry)\n                            )).length}\n                        />\n                    </li>\n                ))}\n            </ul>\n        </div>);\n    }\n}\n"]}