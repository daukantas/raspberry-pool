{"version":3,"sources":["../../../../src/modules/raspberries/components/RaspberryComponent.jsx"],"names":["RaspberryComponent","constructor","props","shouldComponentUpdate","state","render","raspberry","changeConfig","sendAction","url","display","saving","lastUrl","data","config","lastDisplay","id","Date","now","online","screenState","name","externalIp","ip","width","flexBasis","flexGrow","e","setState","target","value","propTypes","object","isRequired","func"],"mappings":"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","file":"RaspberryComponent.jsx","sourcesContent":["import { Component, PropTypes } from 'react';\nimport shouldPureComponentUpdate from 'react-pure-render/function';\nimport T from 'react-alp-translate';\nimport Spinner from '../../common/components/SpinnerComponent';\nimport Actions from './raspberry/ActionsComponent';\n\nexport default class RaspberryComponent extends Component {\n  static propTypes = {\n    raspberry: PropTypes.object.isRequired,\n    changeConfig: PropTypes.func.isRequired,\n    sendAction: PropTypes.func.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  shouldComponentUpdate = shouldPureComponentUpdate;\n\n  render() {\n    const { raspberry, changeConfig, sendAction } = this.props;\n\n    let url;\n    let display;\n    if (this.state.url != null) {\n      url = this.state.url;\n    } else if (raspberry.saving) {\n      url = this.state.lastUrl;\n    } else {\n      url = raspberry.data.config.url;\n    }\n\n    if (this.state.display != null) {\n      display = this.state.display;\n    } else if (raspberry.saving) {\n      display = this.state.lastDisplay;\n    } else {\n      display = raspberry.data.config.display;\n    }\n\n    if (!display) {\n      display = url ? 'kweb3' : 'none';\n    }\n\n    return (<div className=\"raspberry\">\n      <div className=\"img-container\">\n        <img alt=\"screenshot\" src={`/screenshot.jpg?id=${raspberry.id}&date=${Date.now()}`} />\n      </div>\n      <div className=\"header-container\">\n        <h2 className=\"text-title\">\n          <span\n            className={`screen-status ${raspberry.online ? raspberry.screenState : 'offline'}`}\n            title={raspberry.screenState === 'on' ? 'On' : 'Off'}\n          >\n            <span className=\"icon\" />\n            <span className=\"status\" />\n          </span>\n          {raspberry.data.name}\n        </h2>\n      </div>\n      <Spinner active={raspberry.saving} />\n\n      <div className=\"status-container\">\n        <span className={`raspberry-status label ${raspberry.online ? 'success' : 'warning'}`}>\n          {!raspberry.online ? <T id=\"raspberry.offline\" /> : (\n            `${raspberry.externalIp} | ${raspberry.ip}`\n          )}\n        </span>\n      </div>\n\n      <Actions raspberries={[raspberry]} sendAction={sendAction} />\n\n      <fieldset>\n        <legend><T id=\"raspberry.config\" /></legend>\n        <div className=\"row row-responsive spaced\">\n          <div className=\"col\" style={{ width: '100px', flexBasis: '100px', flexGrow: 0 }}>\n            <div className=\"input select\">\n              <select\n                value={display}\n                id={`raspberry-select-${raspberry.id}`}\n                className={'has-value'}\n                onChange={(e) => this.setState({\n                  display: raspberry.data.config.display === e.target.value ? null : e.target.value,\n                })}\n              >\n                <option value=\"none\">Empty</option>\n                <option value=\"kweb3\">kweb3</option>\n                <option value=\"chromium\">chromium</option>\n                <option value=\"livestreamer\">livestreamer</option>\n                <option value=\"omxplayer\">omxplayer</option>\n              </select>\n              <label htmlFor={`raspberry-select-${raspberry.id}`}><T id=\"raspberry.display\" /></label>\n            </div>\n          </div>\n          {(display && display !== 'none') && (\n            <div className=\"col\">\n              <div className=\"input text\">\n                <input\n                  id={`raspberry-url-${raspberry.id}`}\n                  type={display === 'omxplayer' ? 'text' : 'url'} required\n                  className={`has-value${url ? '' : ' has-empty-value'}`}\n                  value={url}\n                  autoComplete=\"off\"\n                  onChange={(e) => this.setState({\n                    url: raspberry.data.config.url === e.target.value ? null : e.target.value,\n                  })}\n                />\n                <label htmlFor={`raspberry-url-${raspberry.id}`}>\n                  <T id={display === 'omxplayer' ? 'raspberry.urlOrPath' : 'raspberry.url'} />\n                </label>\n              </div>\n            </div>\n          )}\n        </div>\n\n        <div className=\"button-container align-center\">\n          <button\n            type=\"button\"\n            disabled={raspberry.saving || (this.state.url == null && this.state.display == null)}\n            onClick={() => {\n              const display = this.state.display || raspberry.data.config.display;\n              const url = this.state.url || raspberry.data.config.url;\n              this.setState({ url: null, lastUrl: url, display: null, lastDisplay: display });\n              changeConfig(raspberry, { display, url });\n            }}\n          >\n            <T id=\"raspberry.save\" />\n          </button>\n        </div>\n      </fieldset>\n    </div>);\n  }\n}\n"]}