{"version":3,"sources":["../../../src/modules/raspberries/controller.server.js"],"names":["raspberriesDescriptor","raspberriesManager","index","ctx","render","raspberries","getAll","screenshot","stats","screenshotPath","query","id","__dirname"],"mappings":";;;;;;AAAA;;AACA;;IAAYA,qB;;AACZ;;IAAYC,kB;;AACZ;;;;;;;;;;kBAEe,wBAAc;AACzBC,UAAMC,GAAN,EAAW;AACP,eAAOA,IAAIC,MAAJ,CAAWJ,qBAAX,EAAkC,EAAEK,aAAaJ,mBAAmBK,MAAnB,EAAf,EAAlC,CAAP;AACH,KAHwB;;AAKzBC;AAAA,qCAAY,WAAOJ,GAAP,EAAe;AACvB,kBAAMK,QAAQ,MAAM,2BAAKL,GAAL,EAAUF,mBAAmBQ,cAAnB,CAAkCN,IAAIO,KAAJ,CAAUC,EAA5C,CAAV,CAApB;AACA,gBAAI,CAACH,KAAL,EAAY;AACR,sBAAM,2BAAKL,GAAL,EAAW,IAAES,SAAU,0CAAvB,CAAN;AACH;AACJ,SALD;;AAAA;AAAA;AAAA;AAAA;AALyB,CAAd,C","file":"controller.server.js","sourcesContent":["import { newController } from 'alp';\nimport * as raspberriesDescriptor from './';\nimport * as raspberriesManager from './raspberriesManager.server';\nimport send from 'koa-sendfile';\n\nexport default newController({\n    index(ctx) {\n        return ctx.render(raspberriesDescriptor, { raspberries: raspberriesManager.getAll() });\n    },\n\n    screenshot: async (ctx) => {\n        const stats = await send(ctx, raspberriesManager.screenshotPath(ctx.query.id));\n        if (!stats) {\n            await send(ctx, `${__dirname}/../../../public/default-screenshot.jpg`);\n        }\n    },\n});\n"]}