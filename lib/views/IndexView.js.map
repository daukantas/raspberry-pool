{"version":3,"sources":["views/IndexView.jsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;IAIY,kBAAkB;;;;;;;;IAGxB,SAAS,qBAAf,MAAM,SAAS,0BAAmB;;AAY9B,eAAW,CAAC,KAAK,EAAE;AACf,aAAK,CAAC,KAAK,CAAC,CAAC;AACb,YAAI,CAAC,YAAY,GAAG,kBAAkB,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,QAAQ,CAAC,CAAC;AAC/E,YAAI,CAAC,UAAU,GAAG,kBAAkB,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,QAAQ,CAAC,CAAC;AAC3E,YAAI,CAAC,WAAW,GAAG,kBAAkB,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,QAAQ,CAAC,CAAC;KAChF;;AAED,qBAAiB,GAAG;cACR,QAAQ,GAAK,IAAI,CAAC,KAAK,CAAvB,QAAQ;;AAChB,YAAI,CAAC,aAAa,GAAG,eAAG,OAAO,EAAE,QAA8B;gBAA3B,OAAO,QAAP,OAAO;gBAAE,WAAW,QAAX,WAAW;;AACpD,mBAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;AACrB,gBAAI,OAAO,KAAK,MAAM,CAAC,OAAO,EAAE;AAC5B,uBAAO,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;aAChC;AACD,oBAAQ,CAAC,kBAAkB,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC,CAAC;SACvD,CAAC,CAAC;AACH,YAAI,CAAC,WAAW,GAAG,eAAG,eAAe,EAAE,AAAC,SAAS,IAAK;AAClD,oBAAQ,CAAC,kBAAkB,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC;SAC/C,CAAC,CAAC;AACH,YAAI,CAAC,cAAc,GAAG,eAAG,kBAAkB,EAAE,AAAC,SAAS,IAAK;AACxD,oBAAQ,CAAC,kBAAkB,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;SAClD,CAAC,CAAC;AACH,YAAI,CAAC,cAAc,GAAG,eAAG,kBAAkB,EAAE,AAAC,EAAE,IAAK;AACjD,oBAAQ,CAAC,kBAAkB,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;SAC3C,CAAC,CAAC;KACN;;AAED,wBAAoB,GAAG;AACnB,wBAAI,OAAO,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;AACjC,wBAAI,eAAe,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;AACvC,wBAAI,kBAAkB,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;AAC7C,wBAAI,kBAAkB,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;KAChD;;AAED,UAAM,GAAG;qBACiD,IAAI,CAAC,KAAK;cAAxD,kBAAkB,UAAlB,kBAAkB;cAAE,qBAAqB,UAArB,qBAAqB;;AACjD,cAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,sBAAsB,CAAC,CAAC;AAC7D,YAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;AAC7B,eAAQ;;;YACJ;AACI,2BAAW,EAAE,kBAAkB,AAAC;AAChC,2BAAW,EAAE,IAAI,CAAC,WAAW,AAAC;AAC9B,0BAAU,EAAE,IAAI,CAAC,UAAU,AAAC;cAC9B;YACF;AACI,2BAAW,EAAE,qBAAqB,AAAC;AACnC,4BAAY,EAAE,IAAI,CAAC,YAAY,AAAC;AAChC,0BAAU,EAAE,IAAI,CAAC,UAAU,AAAC;cAC9B;SACA,CAAE;KACX;CACJ,SA9DU,SAAS,GAAG;AACf,yBAAqB,EAAE,iBAAU,KAAK,CAAC,UAAU;AACjD,sBAAkB,EAAE,iBAAU,KAAK,CAAC,UAAU;AAC9C,YAAQ,EAAE,iBAAU,IAAI,CAAC,UAAU;CACtC,SAEM,YAAY,GAAG;AAClB,YAAQ,EAAE,iBAAU,IAAI,CAAC,UAAU;AACnC,WAAO,EAAE,iBAAU,MAAM,CAAC,UAAU;CACvC;kBAuDU,yBAAQ;QAAG,WAAW,SAAX,WAAW;WAAQ;AACzC,6BAAqB,EAAE,WAAW,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC;AAC5D,0BAAkB,EAAE,WAAW,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,UAAU,CAAC;KAC7D;CAAC,CAAC,CAAC,SAAS,CAAC","file":"views/IndexView.js","sourcesContent":["import React, { Component, PropTypes } from 'react';\nimport { connect } from 'react-redux';\nimport RaspberryList from './components/RaspberryListComponent';\nimport UnknownRaspberryList from './components/UnknownRaspberryListComponent';\nimport * as raspberriesActions from './actions/raspberry';\nimport { on, off } from '../webSocket/index';\n\nclass IndexView extends Component {\n    static propTypes = {\n        registeredRaspberries: PropTypes.array.isRequired,\n        unknownRaspberries: PropTypes.array.isRequired,\n        dispatch: PropTypes.func.isRequired,\n    };\n\n    static contextTypes = {\n        setTitle: PropTypes.func.isRequired,\n        context: PropTypes.object.isRequired,\n    };\n\n    constructor(props) {\n        super(props);\n        this.changeConfig = raspberriesActions.changeConfig.bind(null, props.dispatch);\n        this.sendAction = raspberriesActions.sendAction.bind(null, props.dispatch);\n        this.saveUnknown = raspberriesActions.saveUnknown.bind(null, props.dispatch);\n    }\n\n    componentDidMount() {\n        const { dispatch } = this.props;\n        this._handlerHello = on('hello', ({ version, raspberries }) => {\n            console.log(version);\n            if (version !== window.VERSION) {\n                return location.reload(true);\n            }\n            dispatch(raspberriesActions.updateAll(raspberries));\n        });\n        this._handlerAdd = on('raspberry:add', (raspberry) => {\n            dispatch(raspberriesActions.add(raspberry));\n        });\n        this._handlerUpdate = on('raspberry:update', (raspberry) => {\n            dispatch(raspberriesActions.update(raspberry));\n        });\n        this._handlerDelete = on('raspberry:delete', (id) => {\n            dispatch(raspberriesActions.remove(id));\n        });\n    }\n\n    componentWillUnmount() {\n        off('hello', this._handlerHello);\n        off('raspberry:add', this._handlerAdd);\n        off('raspberry:update', this._handlerUpdate);\n        off('raspberry:delete', this._handlerDelete);\n    }\n\n    render() {\n        const { unknownRaspberries, registeredRaspberries } = this.props;\n        const title = this.context.context.t('raspberry-pool.title');\n        this.context.setTitle(title);\n        return (<div>\n            <UnknownRaspberryList\n                raspberries={unknownRaspberries}\n                saveUnknown={this.saveUnknown}\n                sendAction={this.sendAction}\n            />\n            <RaspberryList\n                raspberries={registeredRaspberries}\n                changeConfig={this.changeConfig}\n                sendAction={this.sendAction}\n            />\n        </div>);\n    }\n}\n\nexport default connect(({ raspberries }) => ({\n    registeredRaspberries: raspberries.filter(r => r.registered),\n    unknownRaspberries: raspberries.filter(r => !r.registered),\n}))(IndexView);\n"],"sourceRoot":"/"}