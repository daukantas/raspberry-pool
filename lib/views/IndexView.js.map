{"version":3,"sources":["views/IndexView.jsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;IAKY;;;;;;;;IAGN,8BAAN,MAAM,SAAN,0BAAkC;;AAY9B,gBAAY,KAAZ,EAAmB;AACf,cAAM,KAAN,EADe;AAEf,aAAK,YAAL,GAAoB,mBAAmB,YAAnB,CAAgC,IAAhC,CAAqC,IAArC,EAA2C,MAAM,QAAN,CAA/D,CAFe;AAGf,aAAK,UAAL,GAAkB,mBAAmB,UAAnB,CAA8B,IAA9B,CAAmC,IAAnC,EAAyC,MAAM,QAAN,CAA3D,CAHe;AAIf,aAAK,WAAL,GAAmB,mBAAmB,WAAnB,CAA+B,IAA/B,CAAoC,IAApC,EAA0C,MAAM,QAAN,CAA7D,CAJe;KAAnB;;AAOA,wBAAoB;cACR,WAAa,KAAK,KAAL,CAAb,SADQ;;AAEhB,aAAK,aAAL,GAAqB,eAAG,OAAH,EAAY,QAA8B;gBAA3B,uBAA2B;gBAAlB,+BAAkB;;AAC3D,gBAAI,YAAY,OAAO,OAAP,EAAgB;AAC5B,uBAAO,SAAS,MAAT,CAAgB,IAAhB,CAAP,CAD4B;aAAhC;AAGA,qBAAS,mBAAmB,SAAnB,CAA6B,WAA7B,CAAT,EAJ2D;SAA9B,CAAjC,CAFgB;AAQhB,aAAK,WAAL,GAAmB,eAAG,eAAH,EAAoB,aAAe;AAClD,qBAAS,mBAAmB,GAAnB,CAAuB,SAAvB,CAAT,EADkD;SAAf,CAAvC,CARgB;AAWhB,aAAK,cAAL,GAAsB,eAAG,kBAAH,EAAuB,aAAe;AACxD,qBAAS,mBAAmB,MAAnB,CAA0B,SAA1B,CAAT,EADwD;SAAf,CAA7C,CAXgB;AAchB,aAAK,cAAL,GAAsB,eAAG,kBAAH,EAAuB,MAAQ;AACjD,qBAAS,mBAAmB,MAAnB,CAA0B,EAA1B,CAAT,EADiD;SAAR,CAA7C,CAdgB;KAApB;;AAmBA,2BAAuB;AACnB,wBAAI,OAAJ,EAAa,KAAK,aAAL,CAAb,CADmB;AAEnB,wBAAI,eAAJ,EAAqB,KAAK,WAAL,CAArB,CAFmB;AAGnB,wBAAI,kBAAJ,EAAwB,KAAK,cAAL,CAAxB,CAHmB;AAInB,wBAAI,kBAAJ,EAAwB,KAAK,cAAL,CAAxB,CAJmB;KAAvB;;AAOA,aAAS;qBACiD,KAAK,KAAL,CADjD;cACG,+CADH;cACuB,qDADvB;;AAEL,cAAM,QAAQ,KAAK,OAAL,CAAa,OAAb,CAAqB,CAArB,CAAuB,sBAAvB,CAAR,CAFD;AAGL,aAAK,OAAL,CAAa,QAAb,CAAsB,KAAtB,EAHK;AAIL,eAAQ;;;YACJ;;kBAAK,IAAG,cAAH,EAAL;gBAAuB;;;;iBAAvB;aADI;YAEJ;AACI,6BAAa,qBAAb;AACA,4BAAY,KAAK,UAAL;aAFhB,CAFI;YAMJ;AACI,6BAAa,kBAAb;AACA,oCAAoB,sBAAsB,MAAtB,CAA6B,KAAK,CAAC,EAAE,MAAF,CAAvD;AACA,6BAAa,KAAK,WAAL;AACb,4BAAY,KAAK,UAAL;aAJhB,CANI;YAYJ;AACI,6BAAa,qBAAb;AACA,8BAAc,KAAK,YAAL;AACd,4BAAY,KAAK,UAAL;aAHhB,CAZI;SAAR,CAJK;KAAT;CA7CJ,SACW,YAAY;AACf,2BAAuB,iBAAU,KAAV,CAAgB,UAAhB;AACvB,wBAAoB,iBAAU,KAAV,CAAgB,UAAhB;AACpB,cAAU,iBAAU,IAAV,CAAe,UAAf;UAGP,eAAe;AAClB,cAAU,iBAAU,IAAV,CAAe,UAAf;AACV,aAAS,iBAAU,MAAV,CAAiB,UAAjB;;kBA6DF,yBAAQ;QAAG;WAAmB;AACzC,+BAAuB,YAAY,MAAZ,CAAmB,KAAK,EAAE,UAAF,CAA/C;AACA,4BAAoB,YAAY,MAAZ,CAAmB,KAAK,CAAC,EAAE,UAAF,CAA7C;;CAFmB,CAAR,CAGX,SAHW","file":"views/IndexView.js","sourcesContent":["import React, { Component, PropTypes } from 'react';\nimport { connect } from 'react-redux';\nimport Header from './components/HeaderComponent';\nimport RaspberryList from './components/RaspberryListComponent';\nimport UnknownRaspberryList from './components/UnknownRaspberryListComponent';\nimport * as raspberriesActions from './actions/raspberry';\nimport { on, off } from '../webSocket/index';\n\nclass IndexView extends Component {\n    static propTypes = {\n        registeredRaspberries: PropTypes.array.isRequired,\n        unknownRaspberries: PropTypes.array.isRequired,\n        dispatch: PropTypes.func.isRequired,\n    };\n\n    static contextTypes = {\n        setTitle: PropTypes.func.isRequired,\n        context: PropTypes.object.isRequired,\n    };\n\n    constructor(props) {\n        super(props);\n        this.changeConfig = raspberriesActions.changeConfig.bind(null, props.dispatch);\n        this.sendAction = raspberriesActions.sendAction.bind(null, props.dispatch);\n        this.saveUnknown = raspberriesActions.saveUnknown.bind(null, props.dispatch);\n    }\n\n    componentDidMount() {\n        const { dispatch } = this.props;\n        this._handlerHello = on('hello', ({ version, raspberries }) => {\n            if (version !== window.VERSION) {\n                return location.reload(true);\n            }\n            dispatch(raspberriesActions.updateAll(raspberries));\n        });\n        this._handlerAdd = on('raspberry:add', (raspberry) => {\n            dispatch(raspberriesActions.add(raspberry));\n        });\n        this._handlerUpdate = on('raspberry:update', (raspberry) => {\n            dispatch(raspberriesActions.update(raspberry));\n        });\n        this._handlerDelete = on('raspberry:delete', (id) => {\n            dispatch(raspberriesActions.remove(id));\n        });\n    }\n\n    componentWillUnmount() {\n        off('hello', this._handlerHello);\n        off('raspberry:add', this._handlerAdd);\n        off('raspberry:update', this._handlerUpdate);\n        off('raspberry:delete', this._handlerDelete);\n    }\n\n    render() {\n        const { unknownRaspberries, registeredRaspberries } = this.props;\n        const title = this.context.context.t('raspberry-pool.title');\n        this.context.setTitle(title);\n        return (<div>\n            <div id=\"disconnected\"><div>disconnected</div></div>\n            <Header\n                raspberries={registeredRaspberries}\n                sendAction={this.sendAction}\n            />\n            <UnknownRaspberryList\n                raspberries={unknownRaspberries}\n                offlineRaspberries={registeredRaspberries.filter(r => !r.online)}\n                saveUnknown={this.saveUnknown}\n                sendAction={this.sendAction}\n            />\n            <RaspberryList\n                raspberries={registeredRaspberries}\n                changeConfig={this.changeConfig}\n                sendAction={this.sendAction}\n            />\n        </div>);\n    }\n}\n\nexport default connect(({ raspberries }) => ({\n    registeredRaspberries: raspberries.filter(r => r.registered),\n    unknownRaspberries: raspberries.filter(r => !r.registered),\n}))(IndexView);\n"],"sourceRoot":"/"}