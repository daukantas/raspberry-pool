{"version":3,"sources":["views/IndexView.jsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;IAMM,SAAS,qBAAf,MAAM,SAAS,0BAAmB;;AAW9B,eAAW,CAAC,KAAK,EAAE;AACf,aAAK,CAAC,KAAK,CAAC,CAAC;AACb,YAAI,CAAC,IAAI,GAAG,yBAAc,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,QAAQ,CAAC,CAAC;AACrD,YAAI,CAAC,UAAU,GAAG,sBAAW,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,QAAQ,CAAC,CAAC;KAC3D;;AAED,qBAAiB,GAAG;cACR,QAAQ,GAAK,IAAI,CAAC,KAAK,CAAvB,QAAQ;;AAChB,YAAI,CAAC,iBAAiB,GAAG,mBAAG,YAAY,EAAE,QAAqB;gBAAlB,WAAW,QAAX,WAAW;;AACpD,oBAAQ,CAAC,0BAAU,WAAW,CAAC,CAAC,CAAC;SACpC,CAAC,CAAC;AACH,YAAI,CAAC,cAAc,GAAG,mBAAG,kBAAkB,EAAE,SAAmB;gBAAhB,SAAS,SAAT,SAAS;;AACrD,oBAAQ,CAAC,gCAAgB,SAAS,CAAC,CAAC,CAAC;SACxC,CAAC,CAAC;AACH,YAAI,CAAC,eAAe,GAAG,mBAAG,mBAAmB,EAAE,SAAmB;gBAAhB,SAAS,SAAT,SAAS;;AACvD,oBAAQ,CAAC,gCAAgB,SAAS,CAAC,CAAC,CAAC;SACxC,CAAC,CAAC;AACH,YAAI,CAAC,aAAa,GAAG,mBAAG,kBAAkB,EAAE,SAAmB;gBAAhB,SAAS,SAAT,SAAS;;AACpD,oBAAQ,CAAC,gCAAgB,SAAS,CAAC,CAAC,CAAC;SACxC,CAAC,CAAC;KACN;;AAED,wBAAoB,GAAG;AACnB,4BAAI,YAAY,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;AAC1C,4BAAI,kBAAkB,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;AAC7C,4BAAI,mBAAmB,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;AAC/C,4BAAI,kBAAkB,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;KAC/C;;AAED,UAAM,GAAG;cACG,WAAW,GAAK,IAAI,CAAC,KAAK,CAA1B,WAAW;;AACnB,cAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,sBAAsB,CAAC,CAAC;AAC7D,YAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;AAC7B,eAAO,kEAAe,WAAW,EAAE,WAAW,AAAC,EAAC,IAAI,EAAE,IAAI,CAAC,IAAI,AAAC,EAAC,UAAU,EAAE,IAAI,CAAC,UAAU,AAAC,GAAG,CAAC;KACpG;CACJ,SA7CU,SAAS,GAAG;AACf,eAAW,EAAE,iBAAU,KAAK,CAAC,UAAU;AACvC,YAAQ,EAAE,iBAAU,IAAI,CAAC,UAAU;CACtC,SAEM,YAAY,GAAG;AAClB,YAAQ,EAAE,iBAAU,IAAI,CAAC,UAAU;AACnC,WAAO,EAAE,iBAAU,MAAM,CAAC,UAAU;CACvC;kBAuCU,yBAAQ;QAAG,WAAW,SAAX,WAAW;WAAQ,EAAE,WAAW,EAAE;CAAC,CAAC,CAAC,SAAS,CAAC","file":"views/IndexView.js","sourcesContent":["import React, { Component, PropTypes } from 'react';\nimport { connect } from 'react-redux';\nimport RaspberryList from './components/RaspberryListComponent';\nimport { updateAll, updateRaspberry, saveRaspberry, sendAction } from './actions/raspberry';\nimport { on, off } from '../websocket';\n\nclass IndexView extends Component {\n    static propTypes = {\n        raspberries: PropTypes.array.isRequired,\n        dispatch: PropTypes.func.isRequired,\n    };\n\n    static contextTypes = {\n        setTitle: PropTypes.func.isRequired,\n        context: PropTypes.object.isRequired,\n    };\n\n    constructor(props) {\n        super(props);\n        this.save = saveRaspberry.bind(null, props.dispatch);\n        this.sendAction = sendAction.bind(null, props.dispatch);\n    }\n\n    componentDidMount() {\n        const { dispatch } = this.props;\n        this._handlerUpdateAll = on('update all', ({ raspberries }) => {\n            dispatch(updateAll(raspberries));\n        });\n        this._handlerOnline = on('raspberry online', ({ raspberry }) => {\n            dispatch(updateRaspberry(raspberry));\n        });\n        this._handlerOffline = on('raspberry offline', ({ raspberry }) => {\n            dispatch(updateRaspberry(raspberry));\n        });\n        this._handlerPatch = on('update raspberry', ({ raspberry }) => {\n            dispatch(updateRaspberry(raspberry));\n        });\n    }\n\n    componentWillUnmount() {\n        off('update all', this._handlerUpdateAll);\n        off('raspberry online', this._handlerOnline);\n        off('raspberry offline', this._handlerOffline);\n        off('update raspberry', this._handlerPatch);\n    }\n\n    render() {\n        const { raspberries } = this.props;\n        const title = this.context.context.t('raspberry-pool.title');\n        this.context.setTitle(title);\n        return <RaspberryList raspberries={raspberries} save={this.save} sendAction={this.sendAction} />;\n    }\n}\n\nexport default connect(({ raspberries }) => ({ raspberries }))(IndexView);\n"],"sourceRoot":"/"}