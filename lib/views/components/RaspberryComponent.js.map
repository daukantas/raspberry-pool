{"version":3,"sources":["views/components/RaspberryComponent.jsx"],"names":[],"mappings":"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","file":"views/components/RaspberryComponent.js","sourcesContent":["import React, { Component, PropTypes } from 'react';\nimport shouldPureComponentUpdate from 'react-pure-render/function';\nimport Spinner from './SpinnerComponent';\nimport Actions from './raspberry/ActionsComponent';\n\nexport default class RaspberryComponent extends Component {\n    static propTypes = {\n        raspberry: PropTypes.object.isRequired,\n        changeConfig: PropTypes.func.isRequired,\n        sendAction: PropTypes.func.isRequired,\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    shouldComponentUpdate = shouldPureComponentUpdate;\n\n    render() {\n        const { raspberry, changeConfig, sendAction } = this.props;\n\n        let url;\n        let display;\n        if (this.state.url != null) {\n            url = this.state.url;\n        } else if (raspberry.saving) {\n            url = this.state.lastUrl;\n        } else {\n            url = raspberry.data.config.url;\n        }\n\n        if (this.state.display != null) {\n            display = this.state.display;\n        } else if (raspberry.saving) {\n            display = this.state.lastDisplay;\n        } else {\n            display = raspberry.data.config.display;\n        }\n\n        return (<div className=\"raspberry\">\n            <h2 className=\"text-title\">\n                {raspberry.data.name}\n            </h2>\n            <Spinner active={raspberry.saving} />\n\n            <div className=\"status-container\">\n                <span className={`raspberry-status label ${raspberry.online ? 'success' : 'warning'}`}>\n                    {raspberry.online ? `${raspberry.ip} ${raspberry.online}` : 'Offline'}\n                </span>\n                {\n                    !raspberry.online ? '' :\n                    <span className=\"screen-status\" title={raspberry.screenState === 'on' ? 'On' : 'Off'}>\n                        <span className=\"icon\" />\n                        <span className={`status ${raspberry.screenState}`} />\n                    </span>\n                }\n            </div>\n\n            <Actions raspberries={[raspberry]} sendAction={sendAction} />\n\n            <fieldset>\n                <legend>Config</legend>\n                <div className=\"row row-responsive spaced\">\n                    <div className=\"col\" style={{ width: '100px', 'flex-basis': '100px', 'flex-grow': 0 }}>\n                        <div className=\"input select\">\n                            <select\n                                value={display || 'kweb3'}\n                                id={`raspberry-select-${raspberry.id}`}\n                                className={`has-value`}\n                                onChange={(e) => this.setState({\n                                    display: raspberry.data.config.display === e.target.value ? null : e.target.value\n                                })}\n                            >\n                                <option value=\"kweb3\">kweb3</option>\n                                <option value=\"livestreamer\">livestreamer</option>\n                            </select>\n                            <label htmlFor={`raspberry-select-${raspberry.id}`}>Display</label>\n                        </div>\n                    </div>\n                    <div className=\"col\">\n                        <div className=\"input text\">\n                            <input\n                                id={`raspberry-url-${raspberry.id}`}\n                                type=\"url\" required\n                                className={`has-value${url ? '' : ' has-empty-value'}`}\n                                value={url}\n                                autoComplete=\"off\"\n                                onChange={(e) => this.setState({\n                                    url: raspberry.data.config.url === e.target.value ? null : e.target.value\n                                })}\n                            />\n                            <label htmlFor={`raspberry-url-${raspberry.id}`}>URL</label>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"button-container center\">\n                    <button type=\"button\" disabled={raspberry.saving || (this.state.url == null && this.state.display == null)} onClick={() => {\n                        const display = this.state.display || raspberry.data.config.display;\n                        const url = this.state.url || raspberry.data.config.url;\n                        this.setState({ url: null, lastUrl: url, display: null, lastDisplay: display });\n                        changeConfig(raspberry, { display, url });\n                    }}>Save</button>\n                </div>\n            </fieldset>\n        </div>);\n    }\n}\n"],"sourceRoot":"/"}