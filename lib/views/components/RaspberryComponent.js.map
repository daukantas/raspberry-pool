{"version":3,"sources":["views/components/RaspberryComponent.jsx"],"names":[],"mappings":"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","file":"views/components/RaspberryComponent.js","sourcesContent":["import React, { Component, PropTypes } from 'react';\nimport shouldPureComponentUpdate from 'react-pure-render/function';\nimport Spinner from './SpinnerComponent';\nimport actions from '../raspberryActions';\n\nexport default class RaspberryComponent extends Component {\n    static propTypes = {\n        raspberry: PropTypes.object.isRequired,\n        changeConfig: PropTypes.func.isRequired,\n        sendAction: PropTypes.func.isRequired,\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    shouldComponentUpdate = shouldPureComponentUpdate;\n\n    render() {\n        const { raspberry, changeConfig, sendAction } = this.props;\n\n        let url;\n        if (this.state.url != null) {\n            url = this.state.url;\n        } else if (raspberry.saving) {\n            url = this.state.lastUrl;\n        } else {\n            url = raspberry.data.config.url;\n        }\n\n        const availableActions = actions.filter(action => action.isVisible(raspberry));\n\n        return (<div className=\"raspberry\">\n            <h2 className=\"text-title\">\n                {raspberry.data.name}\n            </h2>\n            <Spinner active={raspberry.saving} />\n\n            <div className=\"status-container\">\n                <span className={`raspberry-status label ${raspberry.online ? 'success' : 'warning'}`}>\n                    {raspberry.online ? `${raspberry.ip} ${raspberry.online}` : 'Offline'}\n                </span>\n                {\n                    !raspberry.online ? '' :\n                    <span className=\"screen-status\" title={raspberry.screenState === 'on' ? 'On' : 'Off'}>\n                        <span className=\"icon\" />\n                        <span className={`status ${raspberry.screenState}`} />\n                    </span>\n                }\n            </div>\n\n            {!raspberry.online || !availableActions.length ? '' :\n                <div className=\"actions\">\n                    <div className=\"dropdown button\">\n                        Actions\n                        <ul className=\"list\">\n                            {availableActions.map(action => (\n                                <li key={action.value}\n                                    onClick={() => sendAction(raspberry, action.value)}\n                                >\n                                    {action.name}\n                                    <Spinner active={raspberry.actions && raspberry.actions[action.value] === 'sending'} />\n                                </li>\n                            ))}\n                        </ul>\n                    </div>\n                </div>\n            }\n\n            <fieldset>\n                <legend>Config</legend>\n                <div className=\"row row-responsive spaced\">\n                    <div className=\"col\" style={{ width: '100px', 'flex-basis': '100px', 'flex-grow': 0 }}>\n                        <div className=\"input select\">\n                            <select\n                                id={`raspberry-select-${raspberry.id}`}\n                                className={`has-value`}\n                            >\n                                <option>kweb3</option>\n                            </select>\n                            <label htmlFor={`raspberry-select-${raspberry.id}`}>Display</label>\n                        </div>\n                    </div>\n                    <div className=\"col\">\n                        <div className=\"input text\">\n                            <input\n                                id={`raspberry-url-${raspberry.id}`}\n                                type=\"url\" required\n                                className={`has-value${url ? '' : ' has-empty-value'}`}\n                                value={url}\n                                autoComplete=\"off\"\n                                onChange={(e) => this.setState({\n                                    url: raspberry.data.config.url === e.target.value ? null : e.target.value\n                                })}\n                            />\n                            <label htmlFor={`raspberry-url-${raspberry.id}`}>URL</label>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"button-container center\">\n                    <button type=\"button\" disabled={raspberry.saving || !this.state.url} onClick={() => {\n                        const url = this.state.url;\n                        this.setState({ url: null, lastUrl: url });\n                        changeConfig(raspberry, { url });\n                    }}>Save</button>\n                </div>\n            </fieldset>\n        </div>);\n    }\n}\n"],"sourceRoot":"/"}