{"version":3,"sources":["views/components/HeaderComponent.jsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;IAIqB,eAAe,sBAArB,MAAM,eAAe,0BAAmB;;;;iDAMnD,qBAAqB;;;AAErB,UAAM,GAAG;qBACoC,IAAI,CAAC,KAAK;cAA3C,WAAW,UAAX,WAAW;cAAE,eAAe,UAAf,eAAe;;AAEpC,cAAM,gBAAgB,GAAG,2BACpB,GAAG,CAAC,MAAM,iBACJ,MAAM;AACT,uBAAW,EAAE,WAAW,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,IAAI,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;UACvE,CAAC,CACF,MAAM,CAAC,MAAM,IAAI,MAAM,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;;AAErD,eAAQ;;cAAQ,SAAS,EAAC,QAAQ;YAC7B,CAAC,gBAAgB,CAAC,MAAM,GAAG,EAAE,GAC1B;;kBAAK,SAAS,EAAC,SAAS;gBACpB;;sBAAK,SAAS,EAAC,iBAAiB;;oBAE5B;;0BAAI,SAAS,EAAC,MAAM;wBACf,gBAAgB,CAAC,GAAG,CAAC,MAAM,IACxB;;8BAAI,GAAG,EAAE,MAAM,CAAC,KAAK,AAAC;AAClB,uCAAO,EAAE,MAAM,eAAe,CAAC,MAAM,CAAC,WAAW,EAAE,MAAM,CAAC,KAAK,CAAC,AAAC;;4BAEhE,MAAM,CAAC,IAAI;yBACX,AACR,CAAC;qBACD;iBACH;aACJ;SAEL,CAAE;KACd;CACJ,SApCU,SAAS,GAAG;AACf,eAAW,EAAE,iBAAU,KAAK,CAAC,UAAU;AACvC,mBAAe,EAAE,iBAAU,IAAI,CAAC,UAAU;CAC7C;kBAJgB,eAAe","file":"views/components/HeaderComponent.js","sourcesContent":["import React, { Component, PropTypes } from 'react';\nimport shouldPureComponentUpdate from 'react-pure-render/function';\nimport actions from '../raspberryActions';\n\nexport default class HeaderComponent extends Component {\n    static propTypes = {\n        raspberries: PropTypes.array.isRequired,\n        broadcastAction: PropTypes.func.isRequired,\n    };\n\n    shouldComponentUpdate = shouldPureComponentUpdate;\n\n    render() {\n        const { raspberries, broadcastAction } = this.props;\n\n        const availableActions = actions\n            .map(action => ({\n                ...action,\n                raspberries: raspberries.filter(r => r.online && action.isVisible(r)),\n            }))\n            .filter(action => action.raspberries.length > 0);\n\n        return (<header className=\"header\">\n            {!availableActions.length ? '' :\n                <div className=\"actions\">\n                    <div className=\"dropdown button\">\n                        Actions\n                        <ul className=\"list\">\n                            {availableActions.map(action => (\n                                <li key={action.value}\n                                    onClick={() => broadcastAction(action.raspberries, action.value)}\n                                >\n                                    {action.name}\n                                </li>\n                            ))}\n                        </ul>\n                    </div>\n                </div>\n            }\n        </header>);\n    }\n}\n"],"sourceRoot":"/"}