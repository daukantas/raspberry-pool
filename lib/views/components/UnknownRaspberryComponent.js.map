{"version":3,"sources":["views/components/UnknownRaspberryComponent.jsx"],"names":[],"mappings":"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","file":"views/components/UnknownRaspberryComponent.js","sourcesContent":["import React, { Component, PropTypes } from 'react';\nimport shouldPureComponentUpdate from 'react-pure-render/function';\nimport Spinner from './SpinnerComponent';\n\nexport default class UnknownRaspberryComponent extends Component {\n    static propTypes = {\n        raspberry: PropTypes.object.isRequired,\n        offlineRaspberries: PropTypes.array.isRequired,\n        saveUnknown: PropTypes.func.isRequired,\n        sendAction: PropTypes.func.isRequired,\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    shouldComponentUpdate = shouldPureComponentUpdate;\n\n    render() {\n        const { raspberry, saveUnknown, offlineRaspberries } = this.props;\n        const {} = this.state;\n\n        return (<div className=\"raspberry unknown\">\n            <h2 className=\"text-title\">{raspberry.online}</h2>\n            <Spinner active={raspberry.saving} />\n            <span className={`status label`}>{raspberry.ip}</span>\n\n\n            <div className=\"row row-responsive spaced\">\n                <div className=\"col wp-50\">\n                    <div className=\"text-paragraph-title\">Add a new Raspberry</div>\n                    <div className=\"input text\">\n                        <input type=\"text\" required autoComplete=\"off\"\n                            className={`${this.state.name === undefined ? '' : `has-value${this.state.name ? '' : ' has-empty-value'}`}`}\n                            value={this.state.name}\n                            onChange={(e) => this.setState({ name: e.target.value })}\n                        />\n                        <label htmlFor={`raspberry-url-${raspberry.id}`}>Name</label>\n                    </div>\n                </div>\n                {!offlineRaspberries.length ? '' :\n                    <div className=\"col wp-50\">\n                        <div className=\"text-paragraph-title\">Add to existing raspberry</div>\n                        <div className=\"input radio\">\n                            <input id={`add-raspberry-${raspberry.id}`} name=\"addOrReplace\" type=\"radio\" defaultChecked value=\"add\"\n                                   onChange={(e) => this.setState({ addOrReplace: e.target.value })}/>\n                            <label htmlFor={`add-raspberry-${raspberry.id}`}>Add</label>\n                        </div>\n                        <div className=\"input radio\">\n                            <input id={`replace-raspberry-${raspberry.id}`} name=\"addOrReplace\" type=\"radio\" value=\"replace\"\n                                   onChange={(e) => this.setState({ addOrReplace: e.target.value })}/>\n                            <label htmlFor={`replace-raspberry-${raspberry.id}`}>Replace</label>\n                        </div>\n                        <select name=\"raspberry\" onChange={(e) => this.setState({ id: e.target.value })}>\n                            {!this.state.id && <option key=\"__empty\"></option>}\n                            {offlineRaspberries.map(r => <option key={r.id} value={r.id}>{r.data.name}</option>)}\n                        </select>\n                    </div>\n                }\n            </div>\n\n            <div className=\"button-container center\">\n                <button type=\"button\" disabled={!(this.state.name || this.state.id) || !!raspberry.saving} onClick={() => {\n                    saveUnknown(raspberry, {\n                        name: this.state.name,\n                        id: this.state.id,\n                        addOrReplace: this.state.addOrReplace || (this.state.id && 'add'),\n                    });\n                }}>Add</button>\n            </div>\n        </div>);\n        /*\n                <button type=\"button\" onClick={() => {\n                    sendAction(raspberry, 'blink');\n                    this.setState({ urlChanged: false });\n                }}>Blink</button>\n        */\n    }\n}\n"],"sourceRoot":"/"}