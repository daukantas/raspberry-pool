{"version":3,"sources":["views/components/UnknownRaspberryComponent.jsx"],"names":[],"mappings":"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","file":"views/components/UnknownRaspberryComponent.js","sourcesContent":["import React, { Component, PropTypes } from 'react';\nimport shouldPureComponentUpdate from 'react-pure-render/function';\nimport Spinner from './SpinnerComponent';\n\nexport default class UnknownRaspberryComponent extends Component {\n    static propTypes = {\n        raspberry: PropTypes.object.isRequired,\n        offlineRaspberries: PropTypes.array.isRequired,\n        saveUnknown: PropTypes.func.isRequired,\n        sendAction: PropTypes.func.isRequired,\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    shouldComponentUpdate = shouldPureComponentUpdate;\n\n    render() {\n        const { raspberry, saveUnknown, offlineRaspberries } = this.props;\n        const {} = this.state;\n\n        return (<div className=\"raspberry unknown\">\n            <h2 className=\"text-title\">{raspberry.online}</h2>\n            <Spinner active={raspberry.saving} />\n            <span className={`status label`}>{raspberry.ip}</span>\n\n\n            <div className=\"row row-responsive spaced\">\n                <div className=\"col wp-50\">\n                    <div className=\"text-paragraph-title\">Add a new Raspberry</div>\n                    <div className=\"input text\">\n                        <input type=\"text\" required autoComplete=\"off\"\n                            className={`${this.state.name === undefined ? '' : `has-value${this.state.name ? '' : ' has-empty-value'}`}`}\n                            value={this.state.name}\n                            onChange={(e) => this.setState({ name: e.target.value })}\n                        />\n                        <label htmlFor={`raspberry-url-${raspberry.id}`}>Name</label>\n                    </div>\n                </div>\n                {!offlineRaspberries.length ? '' :\n                    <div className=\"col wp-50\">\n                        <div className=\"text-paragraph-title\">Add to existing raspberry</div>\n                        <div className=\"input radio\">\n                            <input id={`add-raspberry-${raspberry.id}`} name=\"addOrReplace\" type=\"radio\" defaultChecked value=\"add\"\n                                   onChange={(e) => this.setState({ addOrReplace: e.target.value })}/>\n                            <label htmlFor={`add-raspberry-${raspberry.id}`}>Add</label>\n                        </div>\n                        <div className=\"input radio\">\n                            <input id={`replace-raspberry-${raspberry.id}`} name=\"addOrReplace\" type=\"radio\" value=\"replace\"\n                                   onChange={(e) => this.setState({ addOrReplace: e.target.value })}/>\n                            <label htmlFor={`replace-raspberry-${raspberry.id}`}>Replace</label>\n                        </div>\n                        <select name=\"raspberry\" onChange={(e) => this.setState({ id: e.target.value })}>\n                            {!this.state.id && <option key=\"__empty\"></option>}\n                            {offlineRaspberries.map(r => <option key={r.id} value={r.id}>{r.data.name}</option>)}\n                        </select>\n                    </div>\n                }\n            </div>\n\n            <div className=\"button-container center\">\n                <button type=\"button\" disabled={!(this.state.name || this.state.id) || !!raspberry.saving} onClick={() => {\n                    saveUnknown(raspberry, {\n                        name: this.state.name,\n                        id: this.state.id,\n                        addOrReplace: this.state.addOrReplace || (this.state.id && 'add'),\n                    });\n                }}>Add</button>\n            </div>\n        </div>);\n        /*\n                <button type=\"button\" onClick={() => {\n                    sendAction(raspberry, 'blink');\n                    this.setState({ urlChanged: false });\n                }}>Blink</button>\n        */\n    }\n}\n"],"sourceRoot":"/"}