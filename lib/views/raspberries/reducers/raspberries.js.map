{"version":3,"sources":["views/raspberries/reducers/raspberries.js"],"names":[],"mappings":";;;;;;;;AAAA;;AAEA;;AAWA;;AAEA,MAAM,mBAAmB,kCAAc;AACnC,yBAAU,CAAC,KAAD;AAAA,YAAU,SAAV,SAAU,SAAV;AAAA,eAA0B,SAA1B;AAAA,KADyB;AAEnC,yBAAU,CAAC,KAAD;AAAA,YAAU,SAAV,SAAU,SAAV;AAAA,eAA0B,SAA1B;AAAA,KAFyB;AAGnC,oCAAqB;AAAA,4BAAmB,SAAnB;AAAA,KAHc;AAInC,yBAAU;AAAA,4BAAmB,SAAnB,IAA8B,QAAQ,IAAtC;AAAA,KAJyB;AAKnC,wBAAS,CAAC,SAAD;AAAA,YAAc,OAAd,SAAc,OAAd;AAAA,4BAAkC,SAAlC,EAAgD,OAAhD,IAAyD,QAAQ,KAAjE;AAAA,KAL0B;AAMnC,gCAAiB,CAAC,SAAD;AAAA,YAAc,OAAd,SAAc,OAAd;AAAA,YAAuB,MAAvB,SAAuB,MAAvB;AAAA,4BACV,SADU,EAEV,OAFU;AAGb,kCACO,UAAU,OADjB;AAEI,iBAAC,MAAD,GAAU;AAFd;AAHa;AAAA,KANkB;AAcnC,6BAAc,CAAC,SAAD;AAAA,YAAc,OAAd,SAAc,OAAd;AAAA,YAAuB,MAAvB,SAAuB,MAAvB;AAAA,4BACP,SADO,EAEP,OAFO;AAGV,kCACO,UAAU,OADjB;AAEI,iBAAC,MAAD,GAAU;AAFd;AAHU,WAOP,8CAAiB,MAAjB,CAPO;AAAA;AAdqB,CAAd,CAAzB;;AAyBA,MAAM,mBAAmB,CAAC,WAAD,EAAc,MAAd,KAAyB;AAC9C,QAAI,CAAC,OAAO,EAAZ,EAAgB,MAAM,IAAI,KAAJ,CAAU,CAAC,mBAAD,GAAsB,OAAO,IAA7B,EAAkC,AAAlC,CAAV,CAAN;AAChB,WAAO,YAAY,GAAZ,CAAgB,aAAa;AAChC,YAAI,UAAU,EAAV,KAAiB,OAAO,EAA5B,EAAgC,OAAO,SAAP;AAChC,eAAO,iBAAiB,SAAjB,EAA4B,MAA5B,CAAP;AACH,KAHM,CAAP;AAIH,CAND;;kBAQe,kCAAc;AAAA,WAAM,EAAN;AAAA,CAAd,EAAwB;AACnC,4BAAa,CAAC,KAAD;AAAA,YAAU,WAAV,SAAU,WAAV;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA,oBAAmC,WAAnC;AAAA,KADsB;AAEnC,sBAAO,CAAC,WAAD;AAAA,YAAgB,SAAhB,SAAgB,SAAhB;AAAA,eAAgC,CAAC,GAAG,WAAJ,EAAiB,SAAjB,CAAhC;AAAA,KAF4B;AAGnC,yBAAU,CAAC,WAAD;AAAA,YAAgB,EAAhB,SAAgB,EAAhB;AAAA,eAAyB,YAAY,MAAZ,CAAmB;AAAA,mBAAK,EAAE,EAAF,KAAS,EAAd;AAAA,SAAnB,CAAzB;AAAA,KAHyB;AAInC,yBAAU,gBAJyB;AAKnC,oCAAqB,gBALc;AAMnC,yBAAU,gBANyB;AAOnC,wBAAS,gBAP0B;AAQnC,gCAAiB,gBARkB;AASnC,6BAAc;AATqB,CAAxB,C","file":"views/raspberries/reducers/raspberries.js","sourcesContent":["import { createReducer } from 'alp-react-redux';\n\nimport {\n    updateAll,\n    add,\n    update,\n    remove,\n    screenshotUpdated,\n    saving,\n    saved,\n    sendingAction,\n    actionSent,\n} from '../actions/raspberry';\nimport { updateFromAction } from '../../../common/raspberryActionManager';\n\nconst raspberryReducer = createReducer({\n    [update]: (state, { raspberry }) => raspberry,\n    [remove]: (state, { raspberry }) => raspberry,\n    [screenshotUpdated]: raspberry => ({ ...raspberry }),\n    [saving]: raspberry => ({ ...raspberry, saving: true }),\n    [saved]: (raspberry, { changes }) => ({ ...raspberry, ...changes, saving: false }),\n    [sendingAction]: (raspberry, { changes, action }) => ({\n        ...raspberry,\n        ...changes,\n        actions: {\n            ...raspberry.actions,\n            [action]: 'sending',\n        },\n    }),\n    [actionSent]: (raspberry, { changes, action }) => ({\n        ...raspberry,\n        ...changes,\n        actions: {\n            ...raspberry.actions,\n            [action]: null,\n        },\n        ...updateFromAction(action),\n    }),\n});\n\nconst raspberryHandler = (raspberries, action) => {\n    if (!action.id) throw new Error(`Missing action.id, ${action.type}`);\n    return raspberries.map(raspberry => {\n        if (raspberry.id !== action.id) return raspberry;\n        return raspberryReducer(raspberry, action);\n    });\n};\n\nexport default createReducer(() => [], {\n    [updateAll]: (state, { raspberries }): Array => raspberries,\n    [add]: (raspberries, { raspberry }) => [...raspberries, raspberry],\n    [remove]: (raspberries, { id }) => raspberries.filter(r => r.id !== id),\n    [update]: raspberryHandler,\n    [screenshotUpdated]: raspberryHandler,\n    [saving]: raspberryHandler,\n    [saved]: raspberryHandler,\n    [sendingAction]: raspberryHandler,\n    [actionSent]: raspberryHandler,\n});\n"],"sourceRoot":"/"}