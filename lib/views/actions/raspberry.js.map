{"version":3,"sources":["views/actions/raspberry.js"],"names":[],"mappings":";;;;;;QAWgB,SAAS,GAAT,SAAS;QAOT,YAAY,GAAZ,YAAY;QAOZ,eAAe,GAAf,eAAe;QAyCf,aAAa,GAAb,aAAa;QAOb,UAAU,GAAV,UAAU;;;;AAzEnB,MAAM,UAAU,WAAV,UAAU,GAAG,YAAY,CAAC;AAChC,MAAM,aAAa,WAAb,aAAa,GAAG,eAAe,CAAC;AACtC,MAAM,gBAAgB,WAAhB,gBAAgB,GAAG,kBAAkB,CAAC;AAC5C,MAAM,oBAAoB,WAApB,oBAAoB,GAAG,sBAAsB,CAAC;AACpD,MAAM,gBAAgB,WAAhB,gBAAgB,GAAG,kBAAkB,CAAC;AAC5C,MAAM,eAAe,WAAf,eAAe,GAAG,iBAAiB,CAAC;AAC1C,MAAM,wBAAwB,WAAxB,wBAAwB,GAAG,0BAA0B,CAAC;AAC5D,MAAM,qBAAqB,WAArB,qBAAqB,GAAG,uBAAuB,CAAC;;AAItD,SAAS,SAAS,CAAC,WAAW,EAAE;AACnC,WAAO;AACH,YAAI,EAAE,UAAU;AAChB,mBAAW;KACd,CAAC;CACL;;AAEM,SAAS,YAAY,CAAC,SAAS,EAAE;AACpC,WAAO;AACH,YAAI,EAAE,aAAa;AACnB,iBAAS;KACZ,CAAC;CACL;;AAEM,SAAS,eAAe,CAAC,SAAS,EAAE;AACvC,WAAO;AACH,YAAI,EAAE,gBAAgB;AACtB,UAAE,EAAE,SAAS,CAAC,EAAE;AAChB,iBAAS;KACZ,CAAC;CACL;;AAED,SAAS,eAAe,CAAC,SAAS,EAAE;AAChC,WAAO;AACH,YAAI,EAAE,gBAAgB;AACtB,UAAE,EAAE,SAAS,CAAC,EAAE;KACnB,CAAC;CACL;;AAED,SAAS,cAAc,CAAC,SAAS,EAAE,OAAO,EAAE;AACxC,WAAO;AACH,YAAI,EAAE,eAAe;AACrB,UAAE,EAAE,SAAS,CAAC,EAAE;AAChB,eAAO;KACV,CAAC;CACL;;AAED,SAAS,sBAAsB,CAAC,SAAS,EAAE,MAAM,EAAE;AAC/C,WAAO;AACH,YAAI,EAAE,wBAAwB;AAC9B,UAAE,EAAE,SAAS,CAAC,EAAE;AAChB,cAAM,EAAE,MAAM;KACjB,CAAC;CACL;;AAED,SAAS,mBAAmB,CAAC,SAAS,EAAE,MAAM,EAAE,MAAM,EAAE;AACpD,WAAO;AACH,YAAI,EAAE,qBAAqB;AAC3B,UAAE,EAAE,SAAS,CAAC,EAAE;AAChB,cAAM,EAAE,MAAM;AACd,cAAM,EAAE,MAAM;KACjB,CAAC;CACL;;AAGM,SAAS,aAAa,CAAC,QAAQ,EAAE,SAAS,EAAE,OAAO,EAAE;AACxD,YAAQ,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC,CAAC;AACrC,mCAAmB,SAAS,EAAE,OAAO,EAAE,MAAM;AACzC,gBAAQ,CAAC,cAAc,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC,CAAC;KAChD,CAAC,CAAC;CACN;;AAEM,SAAS,UAAU,CAAC,QAAQ,EAAE,SAAS,EAAE,MAAM,EAAE;AACpD,YAAQ,CAAC,sBAAsB,CAAC,SAAS,CAAC,CAAC,CAAC;AAC5C,+BAAoB,SAAS,EAAE,MAAM,EAAE,AAAC,MAAM,IAAK;AAC/C,eAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAA;AACnB,gBAAQ,CAAC,mBAAmB,CAAC,SAAS,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC;KAC5D,CAAC,CAAC;CACN","file":"views/actions/raspberry.js","sourcesContent":["export const UPDATE_ALL = 'UPDATE_ALL';\nexport const ADD_RASPBERRY = 'ADD_RASPBERRY';\nexport const UPDATE_RASPBERRY = 'UPDATE_RASPBERRY';\nexport const CHANGE_URL_RASPBERRY = 'CHANGE_URL_RASPBERRY';\nexport const SAVING_RASPBERRY = 'SAVING_RASPBERRY';\nexport const SAVED_RASPBERRY = 'SAVED_RASPBERRY';\nexport const SENDING_ACTION_RASPBERRY = 'SENDING_ACTION_RASPBERRY';\nexport const ACTION_DONE_RASPBERRY = 'ACTION_DONE_RASPBERRY';\n\nimport { patchRaspberry as sendPatchRaspberry, sendAction as sendActionRaspberry } from '../../websocket';\n\nexport function updateAll(raspberries) {\n    return {\n        type: UPDATE_ALL,\n        raspberries,\n    };\n}\n\nexport function addRaspberry(raspberry) {\n    return {\n        type: ADD_RASPBERRY,\n        raspberry,\n    };\n}\n\nexport function updateRaspberry(raspberry) {\n    return {\n        type: UPDATE_RASPBERRY,\n        id: raspberry.id,\n        raspberry,\n    };\n}\n\nfunction savingRaspberry(raspberry) {\n    return {\n        type: SAVING_RASPBERRY,\n        id: raspberry.id,\n    };\n}\n\nfunction savedRaspberry(raspberry, changes) {\n    return {\n        type: SAVED_RASPBERRY,\n        id: raspberry.id,\n        changes,\n    };\n}\n\nfunction sendingActionRaspberry(raspberry, action) {\n    return {\n        type: SENDING_ACTION_RASPBERRY,\n        id: raspberry.id,\n        action: action,\n    };\n}\n\nfunction actionDoneRaspberry(raspberry, action, result) {\n    return {\n        type: ACTION_DONE_RASPBERRY,\n        id: raspberry.id,\n        action: action,\n        result: result,\n    };\n}\n\n\nexport function saveRaspberry(dispatch, raspberry, changes) {\n    dispatch(savingRaspberry(raspberry));\n    sendPatchRaspberry(raspberry, changes, () => {\n        dispatch(savedRaspberry(raspberry, changes));\n    });\n}\n\nexport function sendAction(dispatch, raspberry, action) {\n    dispatch(sendingActionRaspberry(raspberry));\n    sendActionRaspberry(raspberry, action, (result) => {\n        console.log(result)\n        dispatch(actionDoneRaspberry(raspberry, action, result));\n    });\n}\n"],"sourceRoot":"/"}