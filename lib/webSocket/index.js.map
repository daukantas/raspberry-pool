{"version":3,"sources":["webSocket/index.js"],"names":[],"mappings":"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","file":"webSocket/index.js","sourcesContent":["import socketio from 'socket.io';\nimport { ConsoleLogger, LogLevel } from 'nightingale';\nimport * as raspberriesManager from '../server/raspberriesManager';\nimport { readFileSync } from 'fs';\nimport { createServer } from 'https';\n\nconst logger = new ConsoleLogger('app.webSocket', LogLevel.INFO);\nlet io;\n\nexport function broadcast(type, data) {\n    logger.info('broadcast', { type, data });\n    io.to('raspberries').emit(type, data);\n}\n\nconst dirname = __dirname;\nexport function start(config) {\n    if (io) {\n        throw new Error('Already started');\n    }\n\n    if (!config.has('webSocketPort')) {\n        throw new Error('Missing config webSocketPort');\n    }\n\n    const options = {\n        key: readFileSync(`${dirname}/../../config/cert/server.key`),\n        cert: readFileSync(`${dirname}/../../config/cert/server.crt`),\n    };\n\n    const server = createServer(options);\n    server.listen(config.get('webSocketPort'));\n    io = socketio(server);\n    io.on('connection', socket => {\n        logger.info('connected', { id: socket.id });\n        socket.emit('hello', { version: config.get('version') });\n\n        socket.on('subscribe:raspberries', (callback) => {\n            socket.join('raspberries');\n            callback({ raspberries: raspberriesManager.getAll() });\n        });\n\n        socket.on('unsubscribe:raspberries', () => {\n            socket.leave('raspberries');\n        });\n\n        socket.on('raspberry:changeConfig', (id, config, callback) => {\n            const newConfig = raspberriesManager.changeConfig(id, config, callback);\n            if (!newConfig) {\n                callback();\n            } else {\n                callback(newConfig);\n                const raspberry = raspberriesManager.getById(id);\n                socket.broadcast.to('raspberries').emit('raspberry:update', raspberry);\n            }\n        });\n\n        socket.on('raspberry:sendAction', (ids, action, callback) => {\n            ids.forEach(id => {\n                const raspberry = raspberriesManager.sendAction(id, action);\n                if (raspberry) {\n                    socket.broadcast.to('raspberries').emit('raspberry:update', raspberry);\n                }\n            });\n            callback();\n        });\n\n        socket.on('raspberry:add', (mac, info, callback) => {\n            const newRaspberry = raspberriesManager.add(mac, info);\n            if (!newRaspberry) {\n                callback(false);\n            } else {\n                callback(newRaspberry);\n                socket.broadcast.to('raspberries').emit('raspberry:update', newRaspberry);\n                if (newRaspberry.id !== mac) {\n                    socket.broadcast.to('raspberries').emit('raspberry:update', newRaspberry);\n                }\n            }\n        });\n\n        socket.on('disconnect', () => {\n            logger.info('disconnected', { id: socket.id });\n        });\n    });\n\n    io.on('error', logger.error);\n}\n"],"sourceRoot":"/"}