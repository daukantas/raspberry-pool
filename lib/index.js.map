{"version":3,"sources":["index.js"],"names":[],"mappings":";;AAAA,0BAAsB;;;;AACtB,gDAAyC;;;;AACzC,uDAAmD;;;;AACnD,4CAAwC;;;;AACxC,mDAA+C;;;;AAC/C,gDAA8D;;AAC9D,wCAAgD;;;;AAEhD,MAAM,GAAG,GAAG,kBAAQ,SAAS,EAAE;AAC3B,QAAI,EAAE,CAAC,gBAAgB,EAAE,gBAAgB,CAAC;CAC7C,CAAC,CAAC;AACH,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC;AACjB,4CAAgB,CAAC,GAAG,CAAC,CAAC;AACtB,GAAG,CAAC,WAAW,EAAE,CAAC;AAClB,GAAG,CAAC,WAAW,EAAE,CAAC;AAClB,GAAG,CAAC,SAAS,gDAA4B,CAAC;AAC1C,GAAG,CAAC,MAAM,EAAE,CAAC;AACb,sBAAe,GAAG,CAAC,MAAM,CAAC,CAAC;AAC3B,qBAAU,GAAG,CAAC,CAAC","file":"index.js","sourcesContent":["import Alp from 'alp';\nimport reactredux from 'alp-react-redux';\nimport routerBuilder from './common/routerBuilder';\nimport Html from './views/layouts/Html';\nimport controllers from './server/controllers';\nimport { start as startTcpServer } from './server/tcp-server';\nimport { init as websocket } from './webSocket';\n\nconst app = new Alp(__dirname, {\n    argv: ['webSocket.port', 'tcpSocket.port'],\n});\napp.proxy = true;\nreactredux(Html)(app);\napp.servePublic();\napp.catchErrors();\napp.useRouter(routerBuilder, controllers);\napp.listen();\nstartTcpServer(app.config);\nwebsocket(app);\n"],"sourceRoot":"/"}