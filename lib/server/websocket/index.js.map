{"version":3,"sources":["server/websocket/index.js"],"names":[],"mappings":";;;;;;QAUgB,oB,GAAA,oB;;AANhB;;;;;gCAWS,I;;;;;;gCACA,S;;;QAEO,I,GAAA,I;;AAlBhB;;;;AACA;;;;AAEA;;;;;;;;AAGA,MAAM,SAAS,0BAAW,eAAX,CAAf;AACA,IAAI,EAAJ;AACA,IAAI,QAAJ;;AAEO,SAAS,oBAAT,CAA8B,IAA9B,EAA6C;AAAA,sCAAN,IAAM;AAAN,YAAM;AAAA;;AAChD,WAAO,IAAP,CAAY,WAAZ,EAAyB,EAAE,UAAF,EAAQ,UAAR,EAAzB;AACA,aAAS,EAAT,CAAY,aAAZ,EAA2B,IAA3B,CAAgC,IAAhC,EAAsC,GAAG,IAAzC;AACH;;AAKM,SAAS,IAAT,CAAc,GAAd,EAAmB;AACtB,SAAK,4BAAU,GAAV,CAAL;;AAEA,eAAW,GAAG,EAAH,CAAM,QAAN,EAAgB;AAAA,eAAU,2BAAY,MAAZ,CAAV;AAAA,KAAhB,CAAX;AACA,OAAG,EAAH,CAAM,kBAAN,EAA0B;AAAA,eAAU,+BAAgB,MAAhB,CAAV;AAAA,KAA1B;AACH","file":"server/websocket/index.js","sourcesContent":["import websocket from 'alp-websocket';\nimport Logger from 'nightingale';\n\nimport raspberries from './raspberries';\nimport raspberryClient from './raspberryClient';\n\nconst logger = new Logger('app.websocket');\nlet io;\nlet clientNs;\n\nexport function raspberriesBroadcast(type, ...data) {\n    logger.info('broadcast', { type, data });\n    clientNs.to('raspberries').emit(type, ...data);\n}\n\nexport { emit as emitToRaspberryClient } from './raspberryClient';\nexport { broadcast as broadcastToRaspberryClients } from './raspberryClient';\n\nexport function init(app) {\n    io = websocket(app);\n\n    clientNs = io.of('client', socket => raspberries(socket));\n    io.of('raspberry-client', socket => raspberryClient(socket));\n}\n"],"sourceRoot":"/"}