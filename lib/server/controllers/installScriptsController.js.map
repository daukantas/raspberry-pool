{"version":3,"sources":["server/controllers/installScriptsController.js"],"names":[],"mappings":";;;;;;AAAA,+CAA2C;;;;AAC3C,wBAA+C;;;;AAE/C,MAAM,iBAAiB,GAAG,CAAC,GAAE,SAAS,EAAC,0BAA0B,CAAC,CAAC;AACnE,MAAM,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;AACxB,MAAM,kBAAkB,GAAG,6CAA6C,CAAC;;AAEzE,MAAM,OAAO,GAAG,IAAI,GAAG,CACnB,qBAAY,iBAAiB,CAAC,CACzB,MAAM,CAAC,QAAQ,IAAI,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAC5C,GAAG,CAAC,QAAQ,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,sBAAa,CAAC,GAAE,iBAAiB,EAAC,GAAE,QAAQ,EAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,CAC5G,CAAC;;kBAEa,6BAAc;AACzB,SAAK,iBAAC,GAAG,EAAE;AACP,WAAG,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,KAAK,MAAM,IAAI,GAAG,CAAC,MAAM,KAAK,KAAK,EAAE,GAAG,CAAC,CAAC;AAC/D,cAAM,UAAU,GAAG,GAAG,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;AAC3D,YAAI,UAAU,GAAG,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;AACzC,WAAG,CAAC,MAAM,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC;AAC5B,WAAG,CAAC,GAAG,CAAC,eAAe,EAAE,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;;AAE7C,YAAI,UAAU,KAAK,mBAAmB,EAAE;AACpC,sBAAU,GAAG,UAAU,CAAC,OAAO,CAAC,kBAAkB,EAAE,CAAC,KAAK,GAAE,GAAG,CAAC,OAAO,CAAC,MAAM,EAAC,kBAAkB,CAAC,CAAC,CAAC;SACvG,MAAM,IAAI,UAAU,KAAK,gBAAgB,EAAE;AACxC,sBAAU,GAAG,UAAU,CAAC,OAAO,CAC3B,kBAAkB,EAClB,CAAC,iBAAiB,GAAE,GAAG,CAAC,OAAO,CAAC,MAAM,EAAC,eAAe,GAAE,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,EAAC,CAAC,CACxG,CAAC;SACL;;AAED,WAAG,CAAC,IAAI,GAAG,UAAU,CAAC;KACzB;CACJ,CAAC","file":"server/controllers/installScriptsController.js","sourcesContent":["import newController from 'alp-controller';\nimport { readdirSync, readFileSync } from 'fs';\n\nconst installScriptsDir = `${__dirname}/../../../install-scripts/`;\nconst date = new Date();\nconst CONFIG_PLACEHOLDER = '### SERVER CONFIG WILL BE INJECTED HERE ###';\n\nconst scripts = new Map(\n    readdirSync(installScriptsDir)\n        .filter(filename => filename.endsWith('.sh'))\n        .map(filename => [filename.slice(0, -3), readFileSync(`${installScriptsDir}${filename}`).toString()])\n);\n\nexport default newController({\n    index(ctx) {\n        ctx.assert(ctx.method === 'HEAD' || ctx.method === 'GET', 405);\n        const scriptName = ctx.route.namedParams.get('scriptName');\n        let scriptBody = scripts.get(scriptName);\n        ctx.assert(scriptBody, 404);\n        ctx.set('Last-Modified', date.toUTCString());\n\n        if (scriptName === 'install-raspberry') {\n            scriptBody = scriptBody.replace(CONFIG_PLACEHOLDER, `URL=\"${ctx.request.origin}/install-scripts/\"`);\n        } else if (scriptName === 'install-client') {\n            scriptBody = scriptBody.replace(\n                CONFIG_PLACEHOLDER,\n                `SERVER_HOSTNAME=\"${ctx.request.origin}\"\\nSERVER_PORT=${ctx.app.config.get('tcpSocket').get('port')}`\n            );\n        }\n\n        ctx.body = scriptBody;\n    },\n});\n"],"sourceRoot":"/"}