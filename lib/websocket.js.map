{"version":3,"sources":["websocket.js"],"names":[],"mappings":"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","file":"websocket.js","sourcesContent":["import socketio from 'socket.io';\nimport { ConsoleLogger, LogLevel } from 'nightingale';\nimport { items as raspberries, patchRaspberry, getById, sendAction } from './data/raspberries';\nimport { readFileSync } from 'fs';\nimport { createServer } from 'https';\n\nconst logger = new ConsoleLogger('websocket', LogLevel.ALL);\nlet io;\n\nexport function broadcast(type, data) {\n    io.emit(type, data);\n}\n\nconst dirname = __dirname;\nexport function start(config) {\n    if (io) {\n        throw new Error('Already started');\n    }\n\n    if (!config.has('webSocketPort')) {\n        throw new Error('Missing config webSocketPort');\n    }\n\n    const options = {\n        key: readFileSync(`${dirname}/../config/cert/server.key`),\n        cert: readFileSync(`${dirname}/../config/cert/server.crt`),\n    };\n\n    const server = createServer(options);\n    server.listen(config.get('webSocketPort'));\n    io = socketio(server);\n    io.on('connection', socket => {\n        logger.info('connected', { id: socket.id });\n        socket.emit('update all', { raspberries });\n\n        socket.on('patch raspberry', ({ id, changes }, callback) => {\n            logger.log('patch raspberry', { id, changes });\n            const raspberry = getById(id);\n\n            if (!raspberry) {\n                logger.warn('unknown raspberry', { id });\n                return;\n            }\n\n            changes = patchRaspberry(raspberry, changes);\n            callback(changes);\n            socket.broadcast.emit('update raspberry', { raspberry });\n        });\n\n        socket.on('action raspberry', ({ id, action }, callback) => {\n            logger.log('action raspberry', { id, action });\n            const raspberry = getById(id);\n\n            if (!raspberry) {\n                logger.warn('unknown raspberry', { id });\n                return;\n            }\n\n            sendAction(raspberry, action);\n        });\n\n        socket.on('disconnect', () => {\n            logger.info('disconnected', { id: socket.id });\n        });\n    });\n\n    io.on('error', logger.error);\n}\n"],"sourceRoot":"/"}